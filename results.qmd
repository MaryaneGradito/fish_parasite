---
format:
  docx: 
    reference-doc: "./bib/template.docx"
    bibliography: "./bib/bib.ref.bib"
    csl: "./bib/behavioral-ecology.csl"
execute:
  echo: false
  error: false
  cache: false
  warning: false
crossref:  
  fig-title: Figure    # (default is "Figure")
  title-delim: â€”     # (default is ":")
  fig-prefix: Fig.   # (default is "Figure")
  tbl-prefix: Tab.   # (default is "Table")
editor_options: 
  chunk_output_type: console
---

# Results

```{r}
#| label: load_packages
#| output: false
#| warning: false

    source("./R/func.R")
    pacman::p_load(tidyverse, brms, glmmTMB, gt, latex2exp, posterior, gt, glue, dplyr,magrittr, ggplot2, cowplot, jpeg, magick,rptR)
    options(digits = 3, scipen = 2)
    
```

```{r}
#| label: load_data and models
#| output: false
#| warning: false

############################
# Import processed data
#############################
  all_data <- read.table("./output/all_data_p.csv",header=T, sep=",")

############################
# Load model
############################

  model1 <- readRDS(file = "./output/models/model1.rds")
  model1.2 <- readRDS(file = "./output/models/model1.2.rds")
  model2 <- readRDS(file = "./output/models/model2.rds")
  model2.2 <- readRDS(file = "./output/models/model2.2.rds")
  model3<-readRDS(file = "./output/models/model3.rds")
  model4 <- readRDS(file = "./output/models/model_4.rds")
  model5 <- readRDS(file = "./output/models/model_5.rds")
  model6 <- readRDS(file = "./output/models/model_6.rds")
  model6_1 <- readRDS(file = "./output/models/model_6_1.rds")
  model7 <- readRDS(file = "./output/models/model_7.rds")
  model7_2<-readRDS(file = "./output/models/model_7_2.rds")
  model8<-readRDS(file = "./output/models/model_8.rds")
  model9<-readRDS(file = "./output/models/model_9.rds")
  model_T<-readRDS(file = "./output/models/model2_T.rds")

```

```{r}
#| label: Repeatability and behavioral syndromes
#| output: false
#| warning: false

############################
# Parasite count
#############################
### Blackspots distribution
  hist(all_data$BS_post_tot)

# Blackspots info
  BS_min<-min(all_data$BS_post_tot)
  BS_max<-max(all_data$BS_post_tot)
  BS_median<-median(all_data$BS_post_tot)

### Cestodes distribution
  hist(all_data$P04_alive)

# Cestodes info
  cestode_min<-min(all_data$P04_alive)
  cestode_max<-max(all_data$P04_alive)
  cestode_median<-median(all_data$P04_alive)
  mean(all_data$P04_alive)

### Nematodes distribution
  hist(all_data$P013_alive)

# Nematodes info
  nematode_min<-min(all_data$P013_alive)
  nematode_max<-max(all_data$P013_alive)

### Looking at BS gained after infection
# Create new columns in the dataset
  all_data$BS_gain<- all_data$BS_post_tot - all_data$BS_pre

# BS gain distribution
  hist(all_data$BS_gain)

# BS gain info
  gain_min<-min(all_data$BS_gain) ### miscount, some fish have less BS after infection
  gain_max<-max(all_data$BS_gain)
  gain_median<-median(all_data$BS_gain)
  gain_mean<-mean(all_data$BS_gain)


############################
# Repeatability C vs E
############################
#Extract posterior distribution for model 2, looking at repeatability
         #post_sd_2 <- as_draws_df(model2, variable = "^sd", regex = TRUE)
       #post_sd_C_2 <- post_sd_2[,grepl("C", colnames(post_sd_2))] #ID control
       #post_sd_E_2 <- post_sd_2[,grepl("E", colnames(post_sd_2))] #ID experimental
    #post_sd_cage_2 <- post_sd_2[,grepl("cage", colnames(post_sd_2))]
    # post_sd_sig_2 <- as_draws_df(model2, variable = "^b_sigma", regex = TRUE)
     #post_sd_sig_C_2 <- exp(post_sd_sig_2[,grepl("C", colnames(post_sd_sig_2))]) #ID control
      # post_sd_sig_E_2 <- exp(post_sd_sig_2[,grepl("E", colnames(post_sd_sig_2))]) #ID experimental

       #Extract posterior distribution for model 2, looking at repeatability
         post_sd_2 <- as_draws_df(model_T, variable = "^sd", regex = TRUE)
       post_sd_C_2 <- post_sd_2[,grepl("C", colnames(post_sd_2))] #ID uninfected
       post_sd_E_2 <- post_sd_2[,grepl("E", colnames(post_sd_2))] #ID experimentally infected
       post_sd_T_2 <- post_sd_2[,grepl("T", colnames(post_sd_2))] #ID control
    post_sd_cage_2 <- post_sd_2[,grepl("cage", colnames(post_sd_2))]
     post_sd_sig_2 <- as_draws_df(model_T, variable = "^b_sigma", regex = TRUE)
     post_sd_sig_C_2 <- exp(post_sd_sig_2[,grepl("C", colnames(post_sd_sig_2))]) #ID uninfected
       post_sd_sig_E_2 <- exp(post_sd_sig_2[,grepl("E", colnames(post_sd_sig_2))]) #ID experimentally infected
       post_sd_sig_T_2 <- exp(post_sd_sig_2[,grepl("T", colnames(post_sd_sig_2))]) #ID control
       
#repeatability doesn't change when using model_T (include control fish n = 12)
############################
##     CONTROL GROUP
############################

#Boldness for uninfected group
  fish_c_b <- post_sd_C_2[,grep("zlogboldness", colnames(post_sd_C_2))]^2
  cage_c_b <- post_sd_cage_2[ ,grep("zlogboldness", colnames(post_sd_cage_2))]^2
   res_c_b <- post_sd_sig_C_2[,grep("b_sigma_zlogboldness_treatmentC", colnames(post_sd_sig_C_2))]^2

  R_C_boldness <-   fish_c_b / (fish_c_b + cage_c_b + res_c_b)

#verification
 0.40^2 / (0.15^2 + 0.40^2 + exp(-0.14)^2)
 
  hist(R_C_boldness[,1])
    R_C_bold <- mean(R_C_boldness[,1])
  R_Blb_bold_C <- round(quantile(R_C_boldness[,1], c(0.025, 0.975))[1], 3)
  R_Bub_bold_C <- round(quantile(R_C_boldness[,1], c(0.025, 0.975))[2], 3)
  
  #Boldness for control group
  fish_t_b <- post_sd_T_2[,grep("zlogboldness", colnames(post_sd_T_2))]^2
  cage_t_b <- post_sd_cage_2[ ,grep("zlogboldness", colnames(post_sd_cage_2))]^2
   res_t_b <- post_sd_sig_T_2[,grep("b_sigma_zlogboldness_treatmentT", colnames(post_sd_sig_T_2))]^2

  R_T_boldness <-   fish_t_b / (fish_t_b + cage_t_b + res_t_b)
  
  
    0.43^2 / (0.14^2 + 0.43^2 + exp(0.06)^2)
  
    hist(R_T_boldness[,1])
    R_T_bold <- mean(R_T_boldness[,1])
  R_Blb_bold_T <- round(quantile(R_T_boldness[,1], c(0.025, 0.975))[1], 3)
  R_Bub_bold_T <- round(quantile(R_T_boldness[,1], c(0.025, 0.975))[2], 3)
  
   p_value_bold_T<-pmcmc(R_T_boldness[,1]*100, null = 10, twotail = FALSE)#significant

#exploration for uninfected group
  fish_c_ex <- post_sd_C_2[,grep("zexploration", colnames(post_sd_C_2))]^2
  cage_c_ex <- post_sd_cage_2[ ,grep("zexploration", colnames(post_sd_cage_2))]^2
   res_c_ex <- post_sd_sig_C_2[,grep("b_sigma_zexploration_treatmentC", colnames(post_sd_sig_C_2))]^2

  R_C_exploration <-   fish_c_ex / (fish_c_ex + cage_c_ex + res_c_ex)
  
#verification
  0.57^2 / (exp(-0.11)^2 + 0.57^2 + 0.16^2) #same number

  hist(R_C_exploration[,1])
  R_exp_C_mean<-mean(R_C_exploration[,1])
  R_Blb_exp_C <- round(quantile(R_C_exploration[,1], c(0.025, 0.975))[1], 3)
  R_Bub_exp_C <- round(quantile(R_C_exploration[,1], c(0.025, 0.975))[2], 3)
  
   #Exploration for control group
  fish_t_ex <- post_sd_T_2[,grep("zexploration", colnames(post_sd_T_2))]^2
  cage_t_ex <- post_sd_cage_2[ ,grep("zexploration", colnames(post_sd_cage_2))]^2
   res_t_ex <- post_sd_sig_T_2[,grep("b_sigma_zexploration_treatmentT", colnames(post_sd_sig_T_2))]^2

  R_T_exploration <-   fish_t_ex / (fish_t_ex + cage_t_ex + res_t_ex)
  
  
    0.27^2 / (0.15 ^2 + 0.27^2 + exp(-0.21)^2)
  
    hist(R_T_exploration[,1])
    R_T_exp <- mean(R_T_exploration[,1])
  R_Blb_exp_T <- round(quantile(R_T_exploration[,1], c(0.025, 0.975))[1], 3)
  R_Bub_exp_T <- round(quantile(R_T_exploration[,1], c(0.025, 0.975))[2], 3)
  
   p_value_exp_T<-pmcmc(R_T_exploration[,1]*100, null = 10, twotail = FALSE)#not significant


#activity for uninfected group
  fish_c_ac <- post_sd_C_2[,grep("zlogactivity", colnames(post_sd_C_2))]^2
  cage_c_ac <- post_sd_cage_2[ ,grep("zlogactivity", colnames(post_sd_cage_2))]^2
  res_c_ac <- post_sd_sig_C_2[,grep("b_sigma_zlogactivity_treatmentC", colnames(post_sd_sig_C_2))]^2

  R_C_activity <-   fish_c_ac / (fish_c_ac + cage_c_ac + res_c_ac)
  
#verification
  0.64^2 / (exp(-0.15)^2 + 0.64^2 + 0.11^2) 

  hist(R_C_activity[,1])
 R_act_C<- mean(R_C_activity[,1])
  R_Blb_act_C <- round(quantile(R_C_activity[,1], c(0.025, 0.975))[1], 3)
  R_Bub_act_C <- round(quantile(R_C_activity[,1], c(0.025, 0.975))[2], 3)
  
     #Activity for control group
  fish_t_act <- post_sd_T_2[,grep("zlogactivity", colnames(post_sd_T_2))]^2
  cage_t_act <- post_sd_cage_2[ ,grep("zlogactivity", colnames(post_sd_cage_2))]^2
   res_t_act <- post_sd_sig_T_2[,grep("b_sigma_zlogactivity_treatmentT", colnames(post_sd_sig_T_2))]^2

  R_T_activity <-   fish_t_act / (fish_t_act + cage_t_act + res_t_act)
  
  
     0.43^2 / ( 0.11^2 +  0.43^2 + exp(-0.40)^2)
  
    hist(R_T_activity[,1])
    R_T_act <- mean(R_T_activity[,1])
  R_Blb_act_T <- round(quantile(R_T_activity[,1], c(0.025, 0.975))[1], 3)
  R_Bub_act_T <- round(quantile(R_T_activity[,1], c(0.025, 0.975))[2], 3)
  
   p_value_act_T<-pmcmc(R_T_activity[,1]*100, null = 10, twotail = FALSE) #not significant


############################
# EXPERIMENTAL GROUP
############################

#Boldness for experimental group
  fish_e_b <- post_sd_E_2[,grep("zlogboldness", colnames(post_sd_E_2))]^2
  cage_e_b <- post_sd_cage_2[ ,grep("zlogboldness", colnames(post_sd_cage_2))]^2
  res_e_b <- post_sd_sig_E_2[,grep("b_sigma_zlogboldness_treatmentE", colnames(post_sd_sig_E_2))]^2

  R_E_boldness <-   fish_e_b / (fish_e_b + cage_e_b + res_e_b)
  
#verification
  0.42^2 / (exp(-0.11)^2 + 0.42^2 + 0.15^2)

  hist(R_E_boldness[,1])
  R_E_bold<-mean(R_E_boldness[,1])
  R_Blb_bold_E <- round(quantile(R_E_boldness[,1], c(0.025, 0.975))[1], 3)
  R_Bub_bold_E <- round(quantile(R_E_boldness[,1], c(0.025, 0.975))[2], 3)

#exploration for experimental group
   fish_e_ex <- post_sd_E_2[,grep("zexploration", colnames(post_sd_E_2))]^2
  cage_e_ex <- post_sd_cage_2[ ,grep("zexploration", colnames(post_sd_cage_2))]^2
  res_e_ex <- post_sd_sig_E_2[,grep("b_sigma_zexploration_treatmentE", colnames(post_sd_sig_E_2))]^2

  R_E_exploration <-   fish_e_ex / (fish_e_ex + cage_e_ex + res_e_ex)
  
#verification
  0.38^2 / (exp(-0.28)^2 + 0.38^2 + 0.16^2) 

  hist(R_E_exploration[,1])
  R_exp_E_mean<-mean(R_E_exploration[,1])
  R_Blb_exp_E <- round(quantile(R_E_exploration[,1], c(0.025, 0.975))[1], 3)
  R_Bub_exp_E <- round(quantile(R_E_exploration[,1], c(0.025, 0.975))[2], 3)

#activity for experimental group
  fish_e_ac <- post_sd_E_2[,grep("zlogactivity", colnames(post_sd_E_2))]^2
  cage_e_ac <- post_sd_cage_2[ ,grep("zlogactivity", colnames(post_sd_cage_2))]^2
  res_e_ac <- post_sd_sig_E_2[,grep("b_sigma_zlogactivity_treatmentE", colnames(post_sd_sig_E_2))]^2

  R_E_activity <-   fish_e_ac / (fish_e_ac + cage_e_ac + res_e_ac)

#verification
  0.51^2 / (exp(-0.26)^2 + 0.51^2 + 0.11^2) 
  
  hist(R_E_activity[,1])
    R_act_E<-mean(R_E_activity[,1])
  R_Blb_act_E <- round(quantile(R_E_activity[,1], c(0.025, 0.975))[1], 3)
  R_Bub_act_E <- round(quantile(R_E_activity[,1], c(0.025, 0.975))[2], 3)

#############################
# Overall Repeatability
#############################

  # Boldness
   R_bold  <-  overall_repeatability(post_sd_C_2, post_sd_E_2, post_sd_cage_2, post_sd_sig_C_2, post_sd_sig_E_2, trait = "zlogboldness")
  
        R_bold_mean <- mean(R_bold)
        R_Blb_bold <- round(quantile(R_bold, c(0.025, 0.975))[1], 2)
        R_Bub_bold <- round(quantile(R_bold, c(0.025, 0.975))[2], 2)
        
  #Exploration
  R_exp  <-  overall_repeatability(post_sd_C_2, post_sd_E_2, post_sd_cage_2, post_sd_sig_C_2, post_sd_sig_E_2, trait = "zexploration")
  
      R_exp_mean<-mean(R_exp)
       R_Blb_exp <- round(quantile(R_exp, c(0.025, 0.975))[1], 2)
       R_Bub_exp <- round(quantile(R_exp, c(0.025, 0.975))[2], 2)
       
  #Activity
  R_act  <-  overall_repeatability(post_sd_C_2, post_sd_E_2, post_sd_cage_2, post_sd_sig_C_2, post_sd_sig_E_2, trait = "zlogactivity")
  
  R_act_mean<-mean(R_act)
       R_Blb_act <- round(quantile(R_act, c(0.025, 0.975))[1], 2)
       R_Bub_act <- round(quantile(R_act, c(0.025, 0.975))[2], 2)

#################################
# Compare R in E and C treatments
#################################

#Is the repeatability different before and after treatment ? 
  
  #Boldness
  p_value_bold<-pmcmc((R_C_boldness[,1]) - (R_E_boldness[,1])) # Not different
  # That makes sense given:
  par(mfrow = c(1,2))
  hist(R_E_boldness[,1])
  hist(R_C_boldness[,1])
  
  #Exploration
  p_value_exp<-pmcmc((R_C_exploration[,1]) - (R_E_exploration[,1])) #not different
  
  # Histograms
  hist(R_E_exploration[,1])
  hist(R_C_exploration[,1])
  
  #Activity
  p_value_act<-pmcmc((R_C_activity[,1]) - (R_E_activity[,1])) #not different
  
   # Histograms
  hist(R_E_activity[,1])
  hist(R_C_activity[,1])
  
  
#Is the repeatability different from 10? #trouver papier avec seuil de valeur

#Boldness control
  p_value_bold_C<-pmcmc(R_C_boldness[,1]*100, null = 10, twotail = FALSE)#not significative
#Boldness experimental
  p_value_bold_E<-pmcmc(R_E_boldness[,1]*100, null = 10, twotail = FALSE)#not significative
#Average boldness
  p_value_bold_a<-pmcmc(R_bold*100, null = 10, twotail = FALSE)#not significative
  
#Exploration control
  p_value_exp_C<-pmcmc(R_C_exploration[,1]*100, null = 10, twotail = FALSE)#significative
  
  hist(R_C_exploration[,1])
  hist(R_E_exploration[,1])
#Exploration experimental
  p_value_exp_E<-pmcmc(R_E_exploration[,1]*100, null = 10, twotail = FALSE)#not significative
#Average exploration
  p_value_exp_a<-pmcmc(R_exp*100, null = 10, twotail = FALSE)#not

#Activity control
  p_value_act_C<-pmcmc(R_C_activity[,1]*100, null = 10, twotail = FALSE)##significative
  hist(R_C_activity[,1])
#Activity experimental
  p_value_act_E<-pmcmc(R_E_activity[,1]*100, null = 10, twotail = FALSE)#significative
#Activity average
  p_value_act_a<-pmcmc(R_act*100, null = 10,twotail = FALSE) #significative
  
  
#################################
# Behavioural Syndromes
#################################
  
# Extract correlations from model 2
  post_cor  <- as_draws_df(model2, variable = "^cor", regex= TRUE)
  head(post_cor)

# Extract the C and E groups separately
  cor_bold_treatC <-   post_cor[,grep("treatmentC__[a-z]*_treatmentC", colnames(post_cor))]
  cor_bold_treatE <-   post_cor[,grep("treatmentE__[a-z]*_treatmentE", colnames(post_cor))]

# See if syndromes differ in C and E
  
  #Boldness and activity
  #Control
  bsyn_b_act_C <- data.frame(cor_bold_treatC[,1])
  b_act_C_mean<-mean(bsyn_b_act_C[,1])
  low_b_act_C<-quantile(bsyn_b_act_C[,1], 0.025)
  high_b_act_C<-quantile(bsyn_b_act_C[,1], 0.975)
  blb_bul_b_act_C<-quantile(bsyn_b_act_C[,1], c(0.025, 0.975))
  
  #Experimental                          
  bsyn_b_act_E <- data.frame(cor_bold_treatE[,1])
  b_act_E_mean<-mean(bsyn_b_act_E[,1])
  blb_bul_b_act_E<-quantile(bsyn_b_act_E[,1], c(0.025, 0.975))
  low_b_act_E<-quantile(bsyn_b_act_E[,1], 0.025)
  high_b_act_E<-quantile(bsyn_b_act_E[,1], 0.975)
  
  #is it significant
  pmcmc_b_act_E<-pmcmc(bsyn_b_act_E[,1], twotail = TRUE)
  pmcmc_b_act_C<-pmcmc(bsyn_b_act_C[,1], twotail = TRUE)#control significant
  
  #is the difference significant
  pmcmc_b_act<-pmcmc(bsyn_b_act_C[,1] - bsyn_b_act_E[,1], twotail = TRUE)
  
  #Boldness and exploration
  #Control
  bsyn_b_exp_C <- data.frame(cor_bold_treatC[,2])
  b_exp_C_mean<-mean(bsyn_b_exp_C[,1])
  blb_bul_b_exp_C<-quantile(bsyn_b_exp_C[,1], c(0.025, 0.975))
  low_b_exp_C<-quantile(bsyn_b_exp_C[,1], 0.025)
  high_b_exp_C<-quantile(bsyn_b_exp_C[,1], 0.975)
  
  #Experimental
  bsyn_b_exp_E <- data.frame(cor_bold_treatE[,2])
  b_exp_E_mean<-mean(bsyn_b_exp_E[,1])
  blb_bul_b_exp_E<-quantile(bsyn_b_exp_E[,1], c(0.025, 0.975))
  low_b_exp_E<-quantile(bsyn_b_exp_E[,1], 0.025)
  high_b_exp_E<-quantile(bsyn_b_exp_E[,1], 0.975)
  
  #is it significant
  pmcmc_b_exp_C<-pmcmc(bsyn_b_exp_C[,1], twotail = TRUE) #no
  pmcmc_b_exp_E<-pmcmc(bsyn_b_exp_E[,1], twotail = TRUE)# no
  
  #is the difference significant
  pmcmc_b_exp<-pmcmc(bsyn_b_exp_C[,1] - bsyn_b_exp_E[,1], twotail = TRUE)
  
  
  #Activity and exploration
   #Control
  bsyn_act_exp_C <- data.frame(cor_bold_treatC[,3])
  act_exp_C_mean<-mean(bsyn_act_exp_C[,1])
  blb_bul_act_exp_C<-quantile(bsyn_act_exp_C[,1], c(0.025, 0.975))
  low_act_exp_C<-quantile(bsyn_act_exp_C[,1], 0.025)
  high_act_exp_C<-quantile(bsyn_act_exp_C[,1], 0.975)
  
  #Experimental
  bsyn_act_exp_E <- data.frame(cor_bold_treatE[,3])
  act_exp_E_mean<-mean(bsyn_act_exp_E[,1])
  blb_bul_act_exp_E<-quantile(bsyn_act_exp_E[,1], c(0.025, 0.975))  
  low_act_exp_E<-quantile(bsyn_act_exp_E[,1], 0.025)
  high_act_exp_E<-quantile(bsyn_act_exp_E[,1], 0.975)
  
  #is it significant
   pmcmc_act_exp_E<- pmcmc(bsyn_act_exp_E[,1], twotail = TRUE) #not significant
   pmcmc_act_exp_C<- pmcmc(bsyn_act_exp_C[,1], twotail = TRUE) #significant
  
   #is the difference significant
   pmcmc_act_exp<-pmcmc(bsyn_act_exp_E[,1] - bsyn_act_exp_C[,1], twotail = TRUE)#yes
   
# Overall syndrome
  # Take average of the two treatments
    bsyn_b_act   <- cbind(bsyn_b_act_C[,1], bsyn_b_act_E[,1]); mean(rowMeans(bsyn_b_act)); quantile(rowMeans(bsyn_b_act), c(0.025, 0.975))

  # Pool the two MCMC chains from the treatments into a giant vector 32,000 rows (2*16,000)
    #Boldness and activity
bsyn_b_act2  <- rbind(c(bsyn_b_act_C[,1], bsyn_b_act_E[,1]))
b_act_o<-mean(bsyn_b_act2)
q_b_act<-quantile(bsyn_b_act2, c(0.025, 0.975))
    
low_b_act_o<-quantile(bsyn_b_act2, 0.025)
high_b_act_o<-quantile(bsyn_b_act2, 0.975)
  
    #Boldness and exploration
bsyn_b_exp  <- rbind(c(bsyn_b_exp_C[,1], bsyn_b_exp_E[,1]))
b_exp_o<-mean(bsyn_b_exp)
q_b_exp<-quantile(bsyn_b_exp, c(0.025, 0.975))
    
low_b_exp_o<-quantile(bsyn_b_exp, 0.025)
high_b_exp_o<-quantile(bsyn_b_exp, 0.975)

    #Activity and exploration
bsyn_act_exp  <- rbind(c(bsyn_act_exp_C[,1], bsyn_act_exp_E[,1]))
act_exp_o<-mean(bsyn_act_exp)
q_act_exp<-quantile(bsyn_act_exp, c(0.025, 0.975))

low_act_exp_o<-quantile(bsyn_act_exp, 0.025)
high_act_exp_o<-quantile(bsyn_act_exp, 0.975)
    
#Values in model 1.2 for logactivity-boldness
    #estimate = -0.48
    #CI = -0.93, 0.18 ##pool is closest to model 1.2

    
```

### Methods
#### *Statistical analysis*

All statistical analyses were performed in R (vers. `r paste0(R.Version()$major, ".", R.Version()$minor)`). Adjusted fish mass was calculated as the fish mass minus parasite mass [@Lagrue_2015-wg]. Parasite mass was estimated with the mean mass of 20 parasites (Vic, in prep). For bass tapeworm, adult average mass was 0.003g and the larval form was 0.0008g. We decided to exclude nematodes since the mass varied greatly between individuals, and was rarely found in our fish sample. Black spot mass was considered too small to be subtracted from total mass ($10^{-7}g$). Body condition was calculated with the Fulton index ($mass/length^3 (cm)$) [@Jakob_1996-wg]. We had 4 measures of body condition, one for each trial. We used the adjusted fish mass for the 2 measures (trial 3 and 4) of body condition after the experimental infection (we assume there is no parasites before the experimental infection). We calculated parasite density by dividing the total number of parasite (black spots post-infection and adult cestodes alive and larvae form) with the adjusted fish mass before sacrifice. 

Exploration was visually normally distributed while activity and shyness-boldness were log-transformed to better approximate normality. All variable were z-scaled (i.e., $\left(x - \bar{x} \right) / \sigma$) before fitting the models to ease model interpretation and improve parameter estimation. We fitted our models within a Bayesian statistical framework using the *brms* [vers. `r utils::packageVersion("brms")` [@Burkner2017-wg] package and *rstan* [vers. `r utils::packageVersion("rstan")`] [@noauthor_2021-az].  We ran four MCMC chains each with 6000 iterations, sampling every iteration. We discarded the first 2000 iterations as a warm up. We visually inspected chains to ensure that they were mixing well and that chains had converged (i.e., Rhat < 1.02), and ensured that we had an effective sample size >1000 for all parameters. Statistical significance of estimates from the models were inferred from whether or not confidence intervals included zero.

To test if we had evidence of personality (i.e. traits were repeatable) and if they formed behavioural syndromes (i.e. correlations between traits), we built a multi-responses model (Number of observations: 288) with each of the three traits as response variables. Treatments (uninfected; infected; control) were included as fixed effects for each trait because we were interested in whether infection changed fish behaviour. Treatment "uninfected" (n = 72) is before the experimental infection, including all fish; treatment "infected" (n = 60) is after the experimental infection, i.e. individuals that went into cages in the lake to be infected; and "control" (n = 12) is 2 groups that stayed in the lab and lived under the same conditions, except individuals didn't go into a cage. Fish identity and cage number (n = 12, 10 cages + 2 control groups) were included as random effects. Model 1 had tank effect as a fixed factor compared to Model 2. We compared the models using the *loo* package [vers. `r utils::packageVersion("loo")`]. Model 2 was better fitted than model 1 and we decided not to include tank effect in our models.

Repeatability (R) was calculated as:

$$
R = \frac{\sigma^{2}_{ID}}{\sigma^{2}_{ID} + \sigma^{2}_{cage} +  exp(\sigma_{R})^{2}}
$$ {#eq-eq1}

from @eq-eq1, $\sigma^{2}_{ID}$ is the standard deviation for fish identity, $\sigma^{2}_{cage}$ the standard deviation for cage number and $exp(\sigma_{R})^{2}$ is the residual variance distributed for each treatments. We also calculated repeatability across treatments by pooling the posterior distribution of $exp(\sigma_{R})^{2}$ and $\sigma^{2}_{ID}$. To estimate if repeatability was different from 0, we have chosen 0.10 as a threshold since values can't be of 0 in the distribution (i.e. R will always be significantly different than 0) and we expected R to be higher than 10% for traits to be minimally repeatable. Correlation between traits were extracted from the posterior distribution of the same model but excluded control fish to simplify correlation estimations. We wanted to determine if there was a behavioural syndrome between traits in the uninfected and infected state. To measure the average correlation for each trait, we pooled together the two MCMC chains for the uninfected and infected group.

To test random slopes, we built model 3 the same way as model 2, but we estimated the correlation of change between the slopes of each trait. With this model, we could see how individualsâ€™ changes in one trait correlated with the change in other traits.

To test if the experimental infection influenced personality, we sublet the data set according to the treatment (uninfected: n = 144 observations; infected: n = 120 observations). We built Model 4 to see if parasite density had an effect on the traits. Parasite density (post-infection black spot and alive cestodes together) was included as a fixed factor, fish identity and cage number as random factors. Model 4 assumed than parasite density effect is linear, so we included parasite density squared as a fixed factor in model 4.1. Our sample was too small to estimate model 4.1.

To test if body condition influenced personality, we fitted model 5 with body condition as a fixed factor, fish identity and cage number as random effects for our uninfected group. Model 6 was fitted with parasite density and body condition for our infected group. Finally, to see if the parasite species had different effects on personality, we built model 7 with cestode density, black spot density (post-infection) and body condition as fixed factors; fish identity and cage number as random factors. We suspected an interaction between body condition and parasite density and so we fitted a new model to test this. We also wanted to see if there was an interaction between the two species of parasites and we built a new model with that interaction. Both interactions were not significant and so we decided not to include them in our final models. 

### Results
#### *Experimental infection*

The caging experiment successfully infected our fish (@fig-fig1). Control fish (i.e., that stayed in the laboratory) had no living parasites, which indicated that the praziquantel treatment was effective. The two most abundant species found in the experimentally infected fish were trematodes causing the black spot disease (Trematoda: *Apophallus sp.* and *Uvulifer sp.*; min-max: `r BS_min` - `r BS_max`; median: `r BS_median`) and the bass tapeworm (Cestoda: *Proteocephalus ambloplites*; min-max: `r cestode_min` - `r cestode_max` ; median: `r cestode_median`). The most abundant species of trematode causing black spots was *Apophallus sp*., but *Uvulifer sp.* was found more frequently inside the muscles (MG, personal observations). Experimental fish gained, on average, `r gain_mean` black spots across the different cages, and were found on the fins, body, gills and inside the muscles. Bass tapeworms were mostly found in the liver, stomach and digestive tract, and occasionally around the spleen (parasite count: 9), and rarely on the gills (parasite count: 3) or the heart (parasite count: 2). Other unknown nematode species were found rarely in the body cavity (alive parasite count: 4).

```{r}
#| label: fig-fig1
#| fig-cap: Mean black spot (A) and bass tapeworm (B) density per cage (n=10) according to geographic location of cage sites on Lake Cromwell, Station de Biologie des Laurentides, QuÃ©bec, Canada. Map coordonates are expressed in decimal degrees. Black square is the water entry point.
#| out-width: 100%
#| fig-width: 8
#| fig-height: 8
fig1 <- image_read("./output/figures/map.png")
fig1
```

#### *Evidence of personality and behavioural syndromes*

With a threshold of 10%, only activity was repeatable across trials regardless of the infection status (Average: R = `r R_act_mean`, 95% CI = `r R_Blb_act`, `r R_Bub_act`, $pMCMC_{\alpha = 0.10}$ = `r p_value_act_a`). Shyness was not significantly repeatable in both treatment (Average: R = `r R_bold_mean`, 95% CI = `r R_Blb_bold`, `r R_Bub_bold`, $pMCMC_{\alpha = 0.10}$ = `r p_value_bold_a`). Exploration was repeatable in the uninfected state (R = `r R_exp_C_mean`, 95% CI = `r R_Blb_exp_C`, `r R_Bub_exp_C`, $pMCMC_{\alpha = 0.10}$ = `r p_value_exp_C`;), but not in the experimentally infected state (R = `r R_exp_E_mean`, 95% CI = `r R_Blb_exp_E`, `r R_Bub_exp_E`, $pMCMC_{\alpha = 0.10}$ = `r p_value_exp_E`). We did not observe among-individual variation to be higher in the uninfected vs experimentally infected state for all traits. Repeatability was not significatly different between treatment for shyness ($pMCMC_{\alpha = 0.05}$ = `r p_value_bold`), exploration ($pMCMC_{\alpha = 0.05}$ = `r p_value_exp`) and activity ($pMCMC_{\alpha = 0.05}$ = `r p_value_act`). Repeatability for control fish is uncertain because our sample size is small and confidence intervals are large. Shyness (R = `r R_T_bold`, 95% CI = `r R_Blb_bold_T`, `r R_Bub_bold_T`, $pMCMC_{\alpha = 0.10}$ = `r p_value_bold_T`), exploration (R = `r R_T_exp`, 95% CI = `r R_Blb_exp_T`, `r R_Bub_exp_T`, $pMCMC_{\alpha = 0.10}$ = `r p_value_exp_T`), and activity (R = `r R_T_act`, 95% CI = `r R_Blb_act_T`, `r R_Bub_act_T`, $pMCMC_{\alpha = 0.10}$ = `r p_value_act_T`) were not repeatable over the last two trials for control fish.

We found evidence of behavioural syndromes between some traits depending on the infection status (@fig-fig2). Activity and shyness were negatively and significantly correlated in the uninfected state (cor = `r b_act_C_mean`,95% CI = `r blb_bul_b_act_C`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_b_act_C`), but not when fish were experimentally infected (cor = `r b_act_E_mean`,95% CI = `r blb_bul_b_act_E`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_b_act_E`). Activity and exploration were positively and significantly correlated in the uninfected state as well (cor = `r act_exp_C_mean`,95% CI = `r blb_bul_act_exp_C`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_act_exp_C`), but not after the experimental infection (cor = `r act_exp_E_mean`,95% CI = `r blb_bul_act_exp_E`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_act_exp_E`). Shyness and exploration were not significantly correlated in both treatment (cor = `r mean(bsyn_b_exp)`,95% CI = `r q_b_exp`). Correlations were not significantly different between the uninfected and experimentally infected status for these syndromes (Shyness-Activity: $pMCMC_{\alpha = 0.05}$ =  `r pmcmc_b_act`; Shyness-Exploration: $pMCMC_{\alpha = 0.05}$ =  `r pmcmc_b_exp`; Activity-Exploration: $pMCMC_{\alpha = 0.05}$ =  `r pmcmc_act_exp`).

```{r}
#| label: diff_infected_uninfected
#| output: false
#| warning: false

#Create dataframe with estimates and CI

#Extract post sd from model 2 for each traits and treatment
int_b <- as_draws_df(model2, variable = "^b", regex = TRUE)

#intercept for control
int_b_c<-int_b[,grep("zlogboldness_Intercept", colnames(int_b))]
int_exp_c<-int_b[,grep("zexploration_Intercept", colnames(int_b))]
int_act_c<-int_b[,grep("zlogactivity_Intercept", colnames(int_b))]

#mean estimates for control
int_b_c_num<- as.numeric(unlist(int_b_c))
mean_int_b_c<-mean(int_b_c_num)

int_exp_c_num<- as.numeric(unlist(int_exp_c))
mean_int_exp_c<-mean(int_exp_c_num)

int_act_c_num<- as.numeric(unlist(int_act_c))
mean_int_act_c<-mean(int_act_c_num)

#contrast between intercept C and E
int_b_con<-int_b[,grep("b_zlogboldness_treatmentE", colnames(int_b))]
int_exp_con<-int_b[,grep("b_zexploration_treatmentE", colnames(int_b))]
int_act_con<-int_b[,grep("b_zlogactivity_treatmentE", colnames(int_b))]

#mean estimates for contrast
int_b_con_num<- as.numeric(unlist(int_b_con))
mean_con_b<-mean(int_b_con_num)

blb_b_con <- round(quantile(int_b_con_num, c(0.025, 0.975))[1], 3)
bub_b_con <- round(quantile(int_b_con_num, c(0.025, 0.975))[2], 3)

int_exp_con_num<- as.numeric(unlist(int_exp_con))
mean_con_exp<-mean(int_exp_con_num)

blb_exp_con <- round(quantile(mean_con_exp, c(0.025, 0.975))[1], 3)
bub_exp_con <- round(quantile(mean_con_exp, c(0.025, 0.975))[2], 3)

int_act_con_num<- as.numeric(unlist(int_act_con))
mean_con_act<-mean(int_act_con_num)

blb_act_con <- round(quantile(mean_con_act, c(0.025, 0.975))[1], 3)
bub_act_con <- round(quantile(mean_con_act, c(0.025, 0.975))[2], 3)

#subtract intercept for C - contrast to get intercept for E
int_b_e<-(int_b_c_num + int_b_con_num)
int_b_e_num<- as.numeric(unlist(int_b_e))
mean_int_b_e<-mean(int_b_e_num)

int_exp_e<-(int_exp_con_num + int_exp_c_num)
int_exp_e_num<- as.numeric(unlist(int_exp_e))
mean_int_exp_e<-mean(int_exp_e_num)

int_act_e<-(int_act_con_num + int_act_c_num)
int_act_e_num<- as.numeric(unlist(int_act_e))
mean_int_act_e<-mean(int_act_e_num)

 
#is E and C significantly different for each trait?
pm_b<-pmcmc(int_b_c_num - int_b_e_num, twotail = TRUE) #significantly different
pm_exp<-pmcmc(int_exp_c_num - int_exp_e_num, twotail = TRUE) #significantly different
pm_act<-pmcmc(int_act_c_num - int_act_e_num, twotail = TRUE) #not significant


#95% IC
#Boldness
  #Control
blb_b_c <- round(quantile(int_b_c_num, c(0.025, 0.975))[1], 3)
bub_b_c <- round(quantile(int_b_c_num, c(0.025, 0.975))[2], 3)
  #Experimental
blb_b_e<- round(quantile(int_b_e, c(0.025, 0.975))[1], 3)
bub_b_e<- round(quantile(int_b_e, c(0.025, 0.975))[2], 3)

#Exploration
  #Control
blb_exp_c <- round(quantile(int_exp_c_num, c(0.025, 0.975))[1], 3)
bub_exp_c <- round(quantile(int_exp_c_num, c(0.025, 0.975))[2], 3)
  #Experimental
blb_exp_e <- round(quantile(int_exp_e, c(0.025, 0.975))[1], 3)
bub_exp_e <- round(quantile(int_exp_e, c(0.025, 0.975))[2], 3)

#Activity
  #Control
blb_act_c <- round(quantile(int_act_c_num, c(0.025, 0.975))[1], 3)
bub_act_c <- round(quantile(int_act_c_num, c(0.025, 0.975))[2], 3)
  #Experimental
blb_act_e <- round(quantile(int_act_e, c(0.025, 0.975))[1], 3)
bub_act_e <- round(quantile(int_act_e, c(0.025, 0.975))[2], 3)

#Extract post sd from model 2 for each traits and treatment
int_b <- as_draws_df(model_T, variable = "^b", regex = TRUE)

#intercept for uninfected
int_b_c<-int_b[,grep("zlogboldness_Intercept", colnames(int_b))]
int_exp_c<-int_b[,grep("zexploration_Intercept", colnames(int_b))]
int_act_c<-int_b[,grep("zlogactivity_Intercept", colnames(int_b))]

#mean estimates for uninfected
int_b_c_num<- as.numeric(unlist(int_b_c))
mean_int_b_c<-mean(int_b_c_num)

int_exp_c_num<- as.numeric(unlist(int_exp_c))
mean_int_exp_c<-mean(int_exp_c_num)

int_act_c_num<- as.numeric(unlist(int_act_c))
mean_int_act_c<-mean(int_act_c_num)

#contrast between intercept C and E
int_b_con<-int_b[,grep("b_zlogboldness_treatmentE", colnames(int_b))]
int_exp_con<-int_b[,grep("b_zexploration_treatmentE", colnames(int_b))]
int_act_con<-int_b[,grep("b_zlogactivity_treatmentE", colnames(int_b))]

#contrast between intercept C and T
int_b_con_T<-int_b[,grep("b_zlogboldness_treatmentT", colnames(int_b))]
int_exp_con_T<-int_b[,grep("b_zexploration_treatmentT", colnames(int_b))]
int_act_con_T<-int_b[,grep("b_zlogactivity_treatmentT", colnames(int_b))]

#mean estimates for contrast C-E
int_b_con_num<- as.numeric(unlist(int_b_con))
mean_con_b<-mean(int_b_con_num)

blb_b_con <- round(quantile(int_b_con_num, c(0.025, 0.975))[1], 3)
bub_b_con <- round(quantile(int_b_con_num, c(0.025, 0.975))[2], 3)

int_exp_con_num<- as.numeric(unlist(int_exp_con))
mean_con_exp<-mean(int_exp_con_num)

blb_exp_con <- round(quantile(mean_con_exp, c(0.025, 0.975))[1], 3)
bub_exp_con <- round(quantile(mean_con_exp, c(0.025, 0.975))[2], 3)

int_act_con_num<- as.numeric(unlist(int_act_con))
mean_con_act<-mean(int_act_con_num)

blb_act_con <- round(quantile(mean_con_act, c(0.025, 0.975))[1], 3)
bub_act_con <- round(quantile(mean_con_act, c(0.025, 0.975))[2], 3)

#mean estimates for contrast C-T
int_b_con_num_T<- as.numeric(unlist(int_b_con_T))
mean_con_b_T<-mean(int_b_con_num_T)

blb_b_con_T <- round(quantile(int_b_con_num_T, c(0.025, 0.975))[1], 3)
bub_b_con_T <- round(quantile(int_b_con_num_T, c(0.025, 0.975))[2], 3)

int_exp_con_num_T<- as.numeric(unlist(int_exp_con_T))
mean_con_exp_T<-mean(int_exp_con_num_T)

blb_exp_con_T <- round(quantile(int_exp_con_num_T, c(0.025, 0.975))[1], 3)
bub_exp_con_T <- round(quantile(int_exp_con_num_T, c(0.025, 0.975))[2], 3)

int_act_con_num_T<- as.numeric(unlist(int_act_con_T))
mean_con_act_T<-mean(int_act_con_num_T)

blb_act_con_T <- round(quantile(int_act_con_num_T, c(0.025, 0.975))[1], 3)
bub_act_con_T <- round(quantile(int_act_con_num_T, c(0.025, 0.975))[2], 3)


#subtract intercept for C - contrast E to get intercept for E
int_b_e<-(int_b_c_num + int_b_con_num)
int_b_e_num<- as.numeric(unlist(int_b_e))
mean_int_b_e<-mean(int_b_e_num)

int_exp_e<-(int_exp_con_num + int_exp_c_num)
int_exp_e_num<- as.numeric(unlist(int_exp_e))
mean_int_exp_e<-mean(int_exp_e_num)

int_act_e<-(int_act_con_num + int_act_c_num)
int_act_e_num<- as.numeric(unlist(int_act_e))
mean_int_act_e<-mean(int_act_e_num)

#subtract intercept for C - contrast T to get intercept for T
int_b_e_T<-(int_b_c_num + int_b_con_num_T)
int_b_e_num_T<- as.numeric(unlist(int_b_e_T))
mean_int_b_e_T<-mean(int_b_e_num_T)

int_exp_e_T<-(int_exp_con_num_T + int_exp_c_num)
int_exp_e_num_T<- as.numeric(unlist(int_exp_e_T))
mean_int_exp_e_T<-mean(int_exp_e_num_T)

int_act_e_T<-(int_act_con_num_T + int_act_c_num)
int_act_e_num_T<- as.numeric(unlist(int_act_e_T))
mean_int_act_e_T<-mean(int_act_e_num_T)

 
#is E and C significantly different for each trait?
pm_b<-pmcmc(int_b_c_num - int_b_e_num, twotail = TRUE) #significantly different
pm_exp<-pmcmc(int_exp_c_num - int_exp_e_num, twotail = TRUE) #significantly different
pm_act<-pmcmc(int_act_c_num - int_act_e_num, twotail = TRUE) #not significant
pm_b_T<-pmcmc(int_b_c_num - int_b_e_num_T, twotail = TRUE)
pm_exp_T<-pmcmc(int_exp_c_num - int_exp_e_num_T, twotail = TRUE)
pm_act_T<-pmcmc(int_act_c_num - int_act_e_num_T, twotail = TRUE)

#95% IC
#Boldness
  #Control
blb_b_c <- round(quantile(int_b_c_num, c(0.025, 0.975))[1], 3)
bub_b_c <- round(quantile(int_b_c_num, c(0.025, 0.975))[2], 3)
  #Experimental
blb_b_e<- round(quantile(int_b_e, c(0.025, 0.975))[1], 3)
bub_b_e<- round(quantile(int_b_e, c(0.025, 0.975))[2], 3)

#Exploration
  #Control
blb_exp_c <- round(quantile(int_exp_c_num, c(0.025, 0.975))[1], 3)
bub_exp_c <- round(quantile(int_exp_c_num, c(0.025, 0.975))[2], 3)
  #Experimental
blb_exp_e <- round(quantile(int_exp_e, c(0.025, 0.975))[1], 3)
bub_exp_e <- round(quantile(int_exp_e, c(0.025, 0.975))[2], 3)

#Activity
  #Control
blb_act_c <- round(quantile(int_act_c_num, c(0.025, 0.975))[1], 3)
bub_act_c <- round(quantile(int_act_c_num, c(0.025, 0.975))[2], 3)
  #Experimental
blb_act_e <- round(quantile(int_act_e, c(0.025, 0.975))[1], 3)
bub_act_e <- round(quantile(int_act_e, c(0.025, 0.975))[2], 3)
```

#### *Shyness and exploration responses differ between uninfected and infected state*

We compared mean responses for each trait between the uninfected, infected and control group. Mean shyness and exploration responses were significantly different between the uninfected and experimentally infected state, but not for activity (@fig-fig2). For shyness, we observed a significant decrease in the mean response (Contrast = `r mean_con_b`, 95% CI = `r blb_b_con`, `r bub_b_con`, $pMCMC_{\alpha = 0.05}$ = `r pm_b`), meaning that fish tended to get bolder after the experimental infection. Fish were also significantly more exploratory in the infected state (Contrast = `r mean_con_exp`, 95% CI = `r blb_exp_con`, `r bub_exp_con`, $pMCMC_{\alpha = 0.05}$ = `r pm_exp`). Fish tended to decrease their activity when they were experimentally infected compared to their uninfected state (Contrast = `r mean_con_act`, 95% CI = `r blb_act_con`, `r bub_act_con`, $pMCMC_{\alpha = 0.05}$ = `r pm_act`). Control fish (for trial 3-4) showed the same pattern: mean shyness and exploration responses were significantly different than the uninfected state, but we saw no difference in activity. For shyness, we observed a significant decrease in the mean response (Contrast = `r mean_con_b_T`, 95% CI = `r blb_b_con_T`, `r bub_b_con_T`, $pMCMC_{\alpha = 0.05}$ = `r pm_b_T`), meaning that fish tended to get bolder over time just by staying in the lab. Control fish became also significantly more exploratory in the lab (Contrast = `r mean_con_exp_T`, 95% CI = `r blb_exp_con_T`, `r bub_exp_con_T`, $pMCMC_{\alpha = 0.05}$ = `r pm_exp_T`). Activity did not change over time for control fish (Contrast = `r mean_con_act_T`, 95% CI = `r blb_act_con_T`, `r bub_act_con_T`, $pMCMC_{\alpha = 0.05}$ = `r pm_act_T`).

```{r}
#| label: fig-fig2
#| fig-cap: Contrast in the mean responses and the 95% confidence intervals of shyness (A), exploration (B) and activity (C) of pumpkinseed sunfish (Lepomis gibbosus) between the uninfected (all fish, trial 1-2, n =72), experimentally infected group (trial 3-4, caging experiment n = 60) and control fish (trial 3-4, stayed in the lab, n = 12). All variables are z-scaled.
#| out-width: 100%
#| fig-width: 8
#| fig-height: 5

######################
#Model T contrats + raw units
######################
all_data_T <- read.table("./output/all_data_p_T.csv",header=T, sep=",")
int_w <- as_draws_df(model_T, variable = "^b", regex = TRUE)

bold_int<-int_w[,grep("zlogboldness_Intercept", colnames(int_w))]
exp_int<-int_w[,grep("zexploration_Intercept", colnames(int_w))]
act_int<-int_w[,grep("zlogactivity_Intercept", colnames(int_w))]

bold_T<-int_w[,grep("b_zlogboldness_treatmentT", colnames(int_w))]
exp_T<-int_w[,grep("b_zexploration_treatmentT", colnames(int_w))]
act_T<-int_w[,grep("b_zlogactivity_treatmentT", colnames(int_w))]

bold_E<-int_w[,grep("b_zlogboldness_treatmentE", colnames(int_w))]
exp_E<-int_w[,grep("b_zexploration_treatmentE", colnames(int_w))]
act_E<-int_w[,grep("b_zlogactivity_treatmentE", colnames(int_w))]

######################
#EXPLORATION
######################

#EXPLORATION FOR UNINFECTED (INTERCEPT). MARYANE: THIS ISN'T CORRECT BECAUSE YOU'RE DOING THIS WITH THE POSTERIOR DISTRIBUTION. YOU NEED TO USE THE SUMMARY (MEAN AND SD FOR Z FROM THE RAW DATA)
#intercept from model
int_exp_c_num<- as.numeric(unlist(exp_int))

# First, get the mean and sd of the un-transformed raw data that was used to scale. Remember, you used "scale(exploration, center = TRUE, sd = TRUE)", so you used the SD and mean from the raw data to z-transform. See line 226 of 
mean_exploration <- mean(all_data_T$exploration)
  sd_exploration <- sd(all_data_T$exploration)

# Now, exp_int is the mean of the z-transformed variable. So, we need to use the raw data mean and sd to convert back to raw scale
raw_int_exp_c<-(int_exp_c_num * sd_exploration) + mean_exploration
range(raw_int_exp_c) # Seems sensible
raw_exp_c<- as.numeric(unlist(raw_int_exp_c))
raw_exp_c_mean<-mean(raw_exp_c)

#EXPLORATION FOR CONTRAST (TREATMENT T)
int_exp_con_T_num<- as.numeric(unlist(exp_T))

#EXPLORATION FOR CONTRAST (TREATMENT E)
int_exp_con_E_num<- as.numeric(unlist(exp_E))

#EXPLORATION FOR E
int_exp_E<-(int_exp_con_E_num + int_exp_c_num)
int_exp_E_num<- as.numeric(unlist(int_exp_E))

#raw units for exploration E
raw_int_exp_E<-(int_exp_E_num * sd_exploration) + mean_exploration
range(raw_int_exp_E)
raw_exp_E<- as.numeric(unlist(raw_int_exp_E))
raw_exp_E_mean<-mean(raw_exp_E)

#EXPLORATION FOR T
int_exp_T<-(int_exp_con_num + int_exp_c_num)
int_exp_T_num<- as.numeric(unlist(int_exp_T))

#raw units
raw_int_exp_T<-(int_exp_T_num * sd_exploration) + mean_exploration
range(raw_int_exp_T)
raw_exp_T<- as.numeric(unlist(raw_int_exp_T))
raw_exp_T_mean<-mean(raw_exp_T)

#pmcmc test 
pm_exp_T<-pmcmc(int_exp_c_num - int_exp_T_num,twotail = TRUE) #significantly different

#Exploration confidence intervals
  #Control
blb_exp_T <- round(quantile(raw_exp_T, c(0.025, 0.975))[1], 3)
bub_exp_T <- round(quantile(raw_exp_T, c(0.025, 0.975))[2], 3)
  #infected
blb_exp_E <- round(quantile(raw_exp_E, c(0.025, 0.975))[1], 3)
bub_exp_E <- round(quantile(raw_exp_E, c(0.025, 0.975))[2], 3)
  #uninfected
blb_exp_c <- round(quantile(raw_exp_c, c(0.025, 0.975))[1], 3)
bub_exp_c <- round(quantile(raw_exp_c, c(0.025, 0.975))[2], 3)

######################
#BOLDNESS
######################

#BOLDNESS FOR UNINFECTED (INTERCEPT)
int_bold_c_num<- as.numeric(unlist(bold_int))

#get raw mean and sd from raw data
mean_boldness <- mean(all_data_T$log_boldness)
  sd_boldness <- sd(all_data_T$log_boldness)
  
#raw units
raw_int_b_c<-(int_bold_c_num * sd_boldness) + mean_boldness
range(raw_int_b_c)
raw_bold_c<- as.numeric(unlist(raw_int_b_c))
raw_bold_c_mean<-mean(raw_bold_c)

#BOLDNESS FOR CONTRAST (TREATMENT T)
int_bold_con_T_num<- as.numeric(unlist(bold_T))

#EXPLORATION FOR CONTRAST (TREATMENT E)
int_bold_con_E_num<- as.numeric(unlist(bold_E))

#BOLDNESS FOR E
int_bold_E<-(int_bold_con_E_num + int_bold_c_num)
int_bold_E_num<- as.numeric(unlist(int_bold_E))

#raw units
raw_int_b_E<-(int_bold_E_num * sd_boldness) + mean_boldness
range(raw_int_b_E)
raw_bold_E<- as.numeric(unlist(raw_int_b_E))
raw_bold_E_mean<-mean(raw_bold_E)

#BOLDNESS FOR T
int_bold_T<-(int_bold_con_T_num + int_bold_c_num)
int_bold_T_num<- as.numeric(unlist(int_bold_T))

#raw units
raw_int_b_T<-(int_bold_T_num * sd_boldness) + mean_boldness
range(raw_int_b_T)
raw_bold_T<- as.numeric(unlist(raw_int_b_T))
raw_bold_T_mean<-mean(raw_bold_T)

#Boldness confidence intervals
  #Control
blb_bold_T <- round(quantile(raw_bold_T, c(0.025, 0.975))[1], 3)
bub_bold_T <- round(quantile(raw_bold_T, c(0.025, 0.975))[2], 3)
  #infected
blb_bold_E <- round(quantile(raw_bold_E, c(0.025, 0.975))[1], 3)
bub_bold_E <- round(quantile(raw_bold_E, c(0.025, 0.975))[2], 3)
  #uninfected
blb_bold_c <- round(quantile(raw_bold_c, c(0.025, 0.975))[1], 3)
bub_bold_c <- round(quantile(raw_bold_c, c(0.025, 0.975))[2], 3)

######################
#ACTIVITY
######################
#ACTIVITY FOR UNINFECTED (INTERCEPT)
int_act_c_num<- as.numeric(unlist(act_int))

#mean and sd from raw data
mean_activity <- mean(all_data_T$log_activity)
  sd_activity <- sd(all_data_T$log_activity)

#raw units
raw_int_act_c<-(int_act_c_num * sd_activity) + mean_activity
range(raw_int_act_c)
raw_act_c<- as.numeric(unlist(raw_int_act_c))
raw_act_c_mean<-mean(raw_act_c)

#ACTIVITY FOR CONTRAST (TREATMENT T)
int_act_con_T_num<- as.numeric(unlist(act_T))

#ACTIVITY FOR T
int_act_T<-(int_act_con_T_num + int_act_c_num)
int_act_T_num<- as.numeric(unlist(int_act_T))

#raw units
raw_int_act_T<-(int_act_T_num * sd_activity) + mean_activity
range(raw_int_act_T)
raw_act_T<- as.numeric(unlist(raw_int_act_T))
raw_act_T_mean<-mean(raw_act_T)

#ACTIVITY FOR CONTRAST (TREATMENT E)
int_act_con_E_num<- as.numeric(unlist(act_E))

#ACTIVITY FOR E
int_act_E<-(int_act_con_E_num + int_act_c_num)
int_act_E_num<- as.numeric(unlist(int_act_E))

#raw units
raw_int_act_E<-(int_act_E_num * sd_activity) + mean_activity
range(raw_int_act_E)
raw_act_E<- as.numeric(unlist(raw_int_act_E))
raw_act_E_mean<-mean(raw_act_E)

#Exploration confidence intervals
  #Control
blb_act_T <- round(quantile(raw_act_T, c(0.025, 0.975))[1], 3)
bub_act_T <- round(quantile(raw_act_T, c(0.025, 0.975))[2], 3)
  #infected
blb_act_E <- round(quantile(raw_act_E, c(0.025, 0.975))[1], 3)
bub_act_E <- round(quantile(raw_act_E, c(0.025, 0.975))[2], 3)
  #uninfected
blb_act_c <- round(quantile(raw_act_c, c(0.025, 0.975))[1], 3)
bub_act_c <- round(quantile(raw_act_c, c(0.025, 0.975))[2], 3)

#is E and C significantly different for each trait?
pm_b<-pmcmc(int_b_c_num - int_b_e_num, twotail = TRUE) #significantly different
pm_exp<-pmcmc(int_exp_c_num - int_exp_e_num, twotail = TRUE) #significantly different
pm_act<-pmcmc(int_act_c_num - int_act_e_num, twotail = TRUE) #not significant
pm_b_T<-pmcmc(int_bold_c_num - int_bold_T_num,twotail = TRUE) #significantly different
pm_exp_T<-pmcmc(int_exp_c_num - int_exp_T_num,twotail = TRUE) #significantly different
pm_act_T<-pmcmc(int_act_c_num - int_act_T_num,twotail = TRUE)#not significant

###################
#Create data frame
###################
dat_model<-data.frame(
  trait=c("logboldness","logboldness","exploration","exploration","logactivity","logactivity","exploration","logboldness","logactivity"),
  treatment=c("Uninfected","Infected","Uninfected","Infected","Uninfected","Infected","Control","Control","Control"), 
 estimate = c(raw_bold_c_mean,raw_bold_E_mean,raw_exp_c_mean,raw_exp_E_mean, raw_act_c_mean, raw_act_E_mean, raw_exp_T_mean,raw_bold_T_mean,raw_act_T_mean), 
  Lower_CI = c(blb_bold_c, blb_bold_E, blb_exp_c, blb_exp_E, blb_act_c, blb_act_E,blb_exp_T,blb_bold_T,blb_act_T),
Higher_CI = c(bub_bold_c,bub_bold_E,bub_exp_c,bub_exp_E,bub_act_c,bub_act_E,bub_exp_T,bub_bold_T,bub_act_T))

all_data_T[all_data_T == 'C'] <- 'Uninfected'
all_data_T[all_data_T == 'E'] <- 'Infected'
all_data_T[all_data_T == 'T'] <- 'Control'

###################
#PLOTS
###################
#plot model2      
all_data_T$treatment <- factor(all_data_T$treatment, levels=c("Infected","Uninfected", "Control"))
trt <- as.factor(all_data_T$treatment)

dat1<-dat_model %>% 
  filter(trait == "logboldness")

#boldness
m1<-
ggplot(all_data_T, aes(x = trt, y = log_boldness, group = trt, color = trt)) +
geom_violin(aes(), trim = FALSE) +
geom_jitter(aes(colour = trt),shape=16, position=position_jitter(0.1))+
scale_color_manual(labels = c("Infected","Uninfected","Control"), values = c("#9A6FA5", "#6FA5A4","#FAFA8B"))+
geom_errorbar(data = dat1,aes(x = treatment,y = estimate, ymin= Lower_CI, ymax=Higher_CI), width=0.2, linewidth =0.9, color = "black", inherit.aes = FALSE)+
geom_point(data=dat1, mapping=aes(x= treatment, y= estimate), size=2, shape=21, fill = "grey", inherit.aes = FALSE)+
labs(x = (""), 
y = TeX("Emergence time$_{log_{2}}$")) +
theme_classic() +
  coord_cartesian(ylim = c (-4,5), xlim = c (1, 3))+
  draw_image("./img/parasite.png", x= 0.5,y = 4, scale = 0.9)+
  draw_image("./img/no_parasite.png", x= 1.5,y = 4, scale = 0.9)+
   draw_image("./img/no_parasite.png", x= 2.5,y = 4, scale = 0.9)+
   draw_image("./img/cage.png", x= 1,y = 4, scale = 0.9)+
   draw_image("./img/fleche_gauche.png", x= 1,y = 3.5, scale = 0.6)+
  draw_image("./img/fleche_droite.png", x= 2,y = 3.5, scale = 0.6)+
theme(legend.position = "none",
 legend.title = element_blank()) +
geom_segment(aes(x = 0.5, xend = 1.5, y = 3.25, yend = 3.25), color = "black") +
annotate("text",  x = 1, y = 3.5, label = TeX(paste0("$Contrast_{U - I}$ = -0.47, $pMCMC_{\\alpha = 0.05}$ < 0.001***")), size =2.5) +
  geom_segment(aes(x = 2.5, xend = 3.5, y = 3.25, yend = 3.25), color = "black") +
annotate("text",  x = 3, y = 3.5, label = TeX(paste0("$Contrast_{U - C}$ = -1.11, $pMCMC_{\\alpha = 0.05}$ = 0.002**")), size =2.5)


dat2<-dat_model %>% 
  filter(trait == "exploration")
trt <- as.factor(all_data_T$treatment)

#exploration
m2<-ggplot(all_data_T, aes(x = trt, y = exploration, group = trt, col = trt)) +
geom_violin(aes(), trim = FALSE) +
geom_jitter(aes(colour = trt),shape=16, position=position_jitter(0.1)) +  scale_color_manual(labels = c("Infected","Uninfected","Control"), values = c("#9A6FA5", "#6FA5A4","#FAFA8B"))+
geom_errorbar(data = dat2,aes(x = treatment,y = estimate, ymin= Lower_CI, ymax=Higher_CI), width=0.2, linewidth = 0.9, color = "black", inherit.aes = FALSE)+
geom_point(data=dat2, mapping=aes(x= treatment, y= estimate), size=2, shape=21, fill = "grey", inherit.aes = FALSE)+
labs(x = "", 
y = "Surface covered (%)") +
theme_classic() +
  #draw_image("./img/parasite.png", x= 1.5,y = 1, scale = 0.6)+
  #draw_image("./img/no_parasite.png", x= 0.5,y = 1, scale = 0.6)+
theme(legend.position = "none",
 legend.title = element_blank())+
geom_segment(aes(x = 0.5, xend = 1.5, y = 0.58, yend = 0.58), color = "black") +
annotate("text",  x = 1, y = 0.6, label = TeX(paste0("$Contrast_{U - I}$ = 0.42, $pMCMC_{\\alpha = 0.05}$ = 0.002**")), size =2.5) + 
 geom_segment(aes(x = 2.5, xend = 3.5, y = 0.58, yend = 0.58), color = "black") + 
annotate("text",  x = 3, y = 0.6, label = TeX(paste0("$Contrast_{U - C}$ = 1.13, $pMCMC_{\\alpha = 0.05}$ = 0.002**")), size =2.5) 


#activity
dat3<-dat_model %>% 
  filter(trait == "logactivity")

m3<-ggplot(all_data_T, aes(x = trt, y = z_log_activity, group = trt, col = trt)) +
geom_violin(aes(), trim = FALSE) +
geom_jitter(aes(colour = trt), shape=16, position=position_jitter(0.1)) +
scale_color_manual(labels = c("Infected","Uninfected","Control"), values = c("#9A6FA5", "#6FA5A4","#FAFA8B"))+
geom_errorbar(data = dat3,aes(x = treatment,y = estimate, ymin= Lower_CI, ymax=Higher_CI), width=0.2, linewidth =0.9, color = "black", inherit.aes = FALSE)+
geom_point(data=dat3, mapping=aes(x= treatment, y= estimate), size=2, shape=21, fill = "grey", inherit.aes = FALSE)+
labs(x = "Treatment", 
y = TeX("Distance swam$_{log_{2}}$")) +
theme_classic() +
  #draw_image("./img/parasite.png", x= 1.5,y = 3, scale = 0.6)+
   # draw_image("./img/no_parasite.png", x= 0.5,y = 3, scale = 0.6)+
theme(legend.position = "none",
 legend.title = element_blank()) +
geom_segment(aes(x = 0.5, xend = 1.5, y = 3.85, yend = 3.85), color = "black") +
annotate("text",  x = 1, y = 4.1, label = TeX(paste0("$Contrast_{U - I}$ = -0.26, $pMCMC_{\\alpha = 0.05}$ = 0.06")), size =2.5) + 
  geom_segment(aes(x = 2.5, xend = 3.5, y = 3.85, yend = 3.85), color = "black") + 
annotate("text",  x = 3, y = 4.1, label = TeX(paste0("$Contrast_{U - C}$ = -0.22, $pMCMC_{\\alpha = 0.05}$ = 0.381")), size =2.5)

 m<-plot_grid(
  m1,m2,m3,
  labels = "AUTO", ncol = 1)

 ggsave("./output/figures/fig2.png", plot = m, width = 15, height = 37, units = "cm")

fig2 <- image_read("./output/figures/fig2.png") 
fig2

#so we see that control fish have significantly decrease in their shyness and exploration. Even more than experimentally infected fish. It could suggest that control fish (i.e. that stayed in the lab) were habituated to the boldness and exploration test. It didn't change their activity significantly though (like E fish). Confidence intervals are bigger but the model seemed to work well. 

```

```{r}
#| label: parasite and body condition effects
#| output: false
#| warning: false

#################################
# MODEL 3: random slopes
#################################
# Extract correlations from model
  post_cor_3  <- as_draws_df(model3, variable = "^cor", regex= TRUE)
  head(post_cor_3)

# Extract correlations
  
  #Bold and act treatment E
  cor_bold_act_E <-   post_cor_3[,grep("cor_ID_fish__zlogboldness_treatmentE__zlogactivity_treatmentE", colnames(post_cor_3))]
  
   cor_bold_act_E<- as.numeric(unlist(cor_bold_act_E))
   cor_b_act_mean<-mean(cor_bold_act_E)
   Blb_cor_b_act_E <- round(quantile(cor_bold_act_E, c(0.025, 0.975))[1], 2)
  Bub_cor_b_act_E <- round(quantile(cor_bold_act_E, c(0.025, 0.975))[2], 2)
  pmcmc_cor_bold_act_E<- pmcmc(cor_bold_act_E, twotail = TRUE) #not significant
  
  #Bold and exploration treatment E
  cor_bold_exp_E <-   post_cor_3[,grep("cor_ID_fish__zlogboldness_treatmentE__zexploration_treatmentE", colnames(post_cor_3))]
  pmcmc_cor_bold_exp_E<- pmcmc(cor_bold_exp_E[,1], twotail = TRUE)
  
   cor_bold_exp_E<- as.numeric(unlist(cor_bold_exp_E))
   cor_b_exp_mean<-mean(cor_bold_exp_E)
   Blb_cor_b_exp_E <- round(quantile(cor_bold_exp_E, c(0.025, 0.975))[1], 2)
  Bub_cor_b_exp_E <- round(quantile(cor_bold_exp_E, c(0.025, 0.975))[2], 2)
  pmcmc_cor_bold_exp_E<- pmcmc(cor_bold_exp_E, twotail = TRUE) #not significant
  
  #Activity and exploration E
  cor_act_exp_E <-   post_cor_3[,grep("cor_ID_fish__zlogactivity_treatmentE__zexploration_treatmentE", colnames(post_cor_3))]
  
   cor_act_exp_E<- as.numeric(unlist(cor_act_exp_E))
   cor_act_exp_E_mean<-mean(cor_act_exp_E)
   Blb_cor_act_exp_E <- round(quantile(cor_act_exp_E, c(0.025, 0.975))[1], 2)
  Bub_cor_act_exp_E <- round(quantile(cor_act_exp_E, c(0.025, 0.975))[2], 2)
  pmcmc_cor_act_exp_E<- pmcmc(cor_act_exp_E, twotail = TRUE) #not significant
  
  
#  Bold Intercept vs Bold E
  cor_bold_I_E <-   post_cor_3[,grep("cor_ID_fish__zlogboldness_Intercept__zlogboldness_treatmentE", colnames(post_cor_3))]
  
  cor_bold_I_E<- as.numeric(unlist(cor_bold_I_E))
   cor_bold_I_E_mean<-mean(cor_bold_I_E)
   Blb_cor_bold_I_E <- round(quantile(cor_bold_I_E, c(0.025, 0.975))[1], 2)
  Bub_cor_bold_I_E <- round(quantile(cor_bold_I_E, c(0.025, 0.975))[2], 2)
  pmcmc_cor_bold_I_E<- pmcmc(cor_bold_I_E, twotail = TRUE) #not significant
  
  #Exploration I and Exp E
  cor_exp_I_E <-   post_cor_3[,grep("cor_ID_fish__zexploration_Intercept__zexploration_treatment", colnames(post_cor_3))]
  
  cor_exp_I_E <- as.numeric(unlist(cor_exp_I_E))
   cor_exp_I_E_mean<-mean(cor_exp_I_E)
   Blb_cor_exp_I_E <- round(quantile(cor_exp_I_E, c(0.025, 0.975))[1], 2)
  Bub_cor_exp_I_E <- round(quantile(cor_exp_I_E, c(0.025, 0.975))[2], 2)
  pmcmc_cor_exp_I_E<- pmcmc(cor_exp_I_E, twotail = TRUE) #not significant
  
#Act Intercept and act E
  cor_act_I_E <-   post_cor_3[,grep("cor_ID_fish__zlogactivity_Intercept__zlogactivity_treatmentE", colnames(post_cor_3))]
  
   cor_act_I_E <- as.numeric(unlist(cor_act_I_E))
   cor_act_I_E_mean<-mean(cor_act_I_E)
   Blb_cor_act_I_E <- round(quantile(cor_act_I_E, c(0.025, 0.975))[1], 2)
  Bub_cor_act_I_E <- round(quantile(cor_act_I_E, c(0.025, 0.975))[2], 2)
  pmcmc_cor_act_I_E<- pmcmc(cor_act_I_E, twotail = TRUE) #almost significant
  

#################################
# MODEL 4: effect of parasite on experimental group
#################################
  
#Extract post sd from model 4
post_sd_pl <- as_draws_df(model4, variable = "^b", regex = TRUE)

#extrait effect of parasite load on each traits
bold_pl<-post_sd_pl[,grep("b_zlogboldness_z_dens", colnames(post_sd_pl))]
exp_pl<-post_sd_pl[,grep("b_zexploration_z_dens", colnames(post_sd_pl))]
act_pl<-post_sd_pl[,grep("b_zlogactivity_z_dens", colnames(post_sd_pl))]

  #mean and quantile for activity
  act_pl_num<- as.numeric(unlist(act_pl))
  act_pl_mean <- mean(act_pl_num)
  act_pl_Blb <- round(quantile(act_pl_num, c(0.025, 0.975))[1], 3)
  act_pl_Bub <- round(quantile(act_pl_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_act_pl<-pmcmc(act_pl_num, twotail = TRUE) #significant

  #R2
  R2_m_4 <- bayes_R2(model4, re.form = NA) #marginal
  R2_c_4 <- bayes_R2(model4) #conditional
  
  R2_act_4_m<-R2_m_4[2,1]
  R2_act_4_c<-R2_c_4[2,1]
  
    #mean and quantile for exploration
  exp_pl_num<- as.numeric(unlist(exp_pl))
  exp_pl_mean <- mean(exp_pl_num)
  exp_pl_Blb <- round(quantile(exp_pl_num, c(0.025, 0.975))[1], 3)
  exp_pl_Bub <- round(quantile(exp_pl_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_exp_pl<-pmcmc(exp_pl_num, twotail = TRUE) #not significant

    #mean and quantile for boldness
  bold_pl_num <- as.numeric(unlist(bold_pl))
  bold_pl_mean <- mean(bold_pl_num)
  bold_pl_Blb <- round(quantile(bold_pl_num, c(0.025, 0.975))[1], 3)
  bold_pl_Bub <- round(quantile(bold_pl_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_bold_pl<-pmcmc(bold_pl_num, twotail = TRUE) #not significant

#################################
# MODEL 5: body condition on control group
#################################
  
#Extract post sd from model 5
post_sd_bc <- as_draws_df(model5, variable = "^b", regex = TRUE)

#extrait effect of parasite load on each traits
bold_bc<-post_sd_bc[,grep("b_zlogboldness_z_bc", colnames(post_sd_bc))]
exp_bc<-post_sd_bc[,grep("b_zexploration_z_bc", colnames(post_sd_bc))]
act_bc<-post_sd_bc[,grep("b_zlogactivity_z_bc", colnames(post_sd_bc))]

  #mean and quantile for activity 
  act_bc_num<- as.numeric(unlist(act_bc))
  act_bc_mean <- mean(act_bc_num)
  act_bc_Blb <- round(quantile(act_bc_num, c(0.025, 0.975))[1], 3)
  act_bc_Bub <- round(quantile(act_bc_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value for activity
  p_act_bc<-pmcmc(act_bc_num, twotail = TRUE) #significant

  #R2
  R2_m_5 <- bayes_R2(model5, re.form = NA) #marginal
  R2_c_5 <- bayes_R2(model5) #conditional
  
  R2_act_5_m<-R2_m_5[2,1]
  R2_act_5_c<-R2_c_5[2,1]
  
  #mean and quantile for exploration
  exp_bc_num<- as.numeric(unlist(exp_bc))
  exp_bc_mean <- mean(exp_bc_num)
  exp_bc_Blb <- round(quantile(exp_bc_num, c(0.025, 0.975))[1], 3)
  exp_bc_Bub <- round(quantile(exp_bc_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value for exploration
  p_exp_bc<-pmcmc(exp_bc_num, twotail = TRUE) 

  #mean and quantile for boldness
  bold_bc_num<- as.numeric(unlist(bold_bc))
  bold_bc_mean <- mean(bold_bc_num)
  bold_bc_Blb <- round(quantile(bold_bc_num, c(0.025, 0.975))[1], 3)
  bold_bc_Bub <- round(quantile(bold_bc_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value for boldness
  p_bold_bc<-pmcmc(bold_bc_num, twotail = TRUE) 

  
  
#################################
# MODEL 6: body condition and parasite load on infected fish
#################################
#Extract post sd from model 6
post_sd_pl_bc<- as_draws_df(model6_1, variable = "^b", regex = TRUE)

#extrait effect of body condition and parasite load on each traits
bold_bc_6<-post_sd_pl_bc[,grep("b_zlogboldness_z_bc", colnames(post_sd_pl_bc))]
exp_bc_6<-post_sd_pl_bc[,grep("b_zexploration_z_bc", colnames(post_sd_pl_bc))]
act_bc_6<-post_sd_pl_bc[,grep("b_zlogactivity_z_bc", colnames(post_sd_pl_bc))]

  #mean and quantile for activity 
  act_bc_num_6<- as.numeric(unlist(act_bc_6))
  act_bc_mean_6 <- mean(act_bc_num_6)
  act_bc_Blb_6 <- round(quantile(act_bc_num_6, c(0.025, 0.975))[1], 3)
  act_bc_Bub_6 <- round(quantile(act_bc_num_6, c(0.025, 0.975))[2], 3)
  
  #pmcmc value for activity
  p_act_bc_6<-pmcmc(act_bc_num_6, twotail = TRUE) #significant

  #R2
  R2_m_6 <- bayes_R2(model6_1, re.form = NA) #marginal
  R2_c_6 <- bayes_R2(model6_1) #conditional
  
  R2_act_6_m<-R2_m_6[2,1]
  R2_act_6_c<-R2_c_6[2,1]
  
   #mean and quantile for exploration
  exp_bc_num_6<- as.numeric(unlist(exp_bc_6))
  exp_bc_mean_6 <- mean(exp_bc_num_6)
  exp_bc_Blb_6 <- round(quantile(exp_bc_num_6, c(0.025, 0.975))[1], 3)
  exp_bc_Bub_6 <- round(quantile(exp_bc_num_6, c(0.025, 0.975))[2], 3)
  
  #pmcmc value for exploration
  p_exp_bc_6<-pmcmc(exp_bc_num_6, twotail = TRUE) #not significant

   #mean and quantile for boldness
  bold_bc_num_6<- as.numeric(unlist(bold_bc))
 bold_bc_mean_6 <- mean(bold_bc_num_6)
  bold_bc_Blb_6 <- round(quantile(bold_bc_num_6, c(0.025, 0.975))[1], 3)
  bold_bc_Bub_6 <- round(quantile(bold_bc_num_6, c(0.025, 0.975))[2], 3)
  
  #pmcmc value for boldness
  p_bold_bc_6<-pmcmc(bold_bc_num_6, twotail = TRUE) #not significant

  
#################################
# MODEL 7: looking at two species of parasites
#################################

  #Extract post sd from model 7
post_sd_2_p <- as_draws_df(model7_2, variable = "^b", regex = TRUE)

#extrait effect of parasite load on each traits
bold_bs<-post_sd_2_p[,grep("b_zlogboldness_z_bs_2", colnames(post_sd_2_p))]
exp_bs<-post_sd_2_p[,grep("b_zexploration_z_bs_2", colnames(post_sd_2_p))]
act_bs<-post_sd_2_p[,grep("b_zlogactivity_z_bs_2", colnames(post_sd_2_p))]

bold_ces<-post_sd_2_p[,grep("b_zlogboldness_z_ces", colnames(post_sd_2_p))]
exp_ces<-post_sd_2_p[,grep("b_zexploration_z_ces", colnames(post_sd_2_p))]
act_ces<-post_sd_2_p[,grep("b_zlogactivity_z_ces", colnames(post_sd_2_p))]

  #blackspots
  #mean and quantile for activity
  act_bs_num<- as.numeric(unlist(act_bs))
  act_bs_mean <- mean(act_bs_num)
  act_bs_Blb <- round(quantile(act_bs_num, c(0.025, 0.975))[1], 3)
  act_bs_Bub <- round(quantile(act_bs_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_act_bs<-pmcmc(act_bs_num, twotail = TRUE) #significant

  #R2
  R2_m_7 <- bayes_R2(model7_2, re.form = NA) #marginal
  R2_c_7 <- bayes_R2(model7_2) #conditional
  
  R2_act_7_m<-R2_m_7[2,1]
  R2_act_7_c<-R2_c_7[2,1]
  
    #mean and quantile for exploration
  exp_bs_num<- as.numeric(unlist(exp_bs))
  exp_bs_mean <- mean(exp_bs_num)
  exp_bs_Blb <- round(quantile(exp_bs_num, c(0.025, 0.975))[1], 3)
  exp_bs_Bub <- round(quantile(exp_bs_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_exp_bs<-pmcmc(exp_bs_num, twotail = TRUE) #significant

    #mean and quantile for boldness
  bold_bs_num<- as.numeric(unlist(bold_bs))
  bold_bs_mean <- mean(bold_bs_num)
  bold_bs_Blb <- round(quantile(bold_bs_num, c(0.025, 0.975))[1], 3)
  bold_bs_Bub <- round(quantile(bold_bs_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_bold_bs<-pmcmc(bold_bs_num, twotail = TRUE) #significant

  ###cestodes
  #mean and quantile for activity
  act_ces_num<- as.numeric(unlist(act_ces))
  act_ces_mean <- mean(act_ces_num)
  act_ces_Blb <- round(quantile(act_ces_num, c(0.025, 0.975))[1], 3)
  act_ces_Bub <- round(quantile(act_ces_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_act_ces<-pmcmc(act_ces_num, twotail = TRUE) #significant
  
    #mean and quantile for exploration
  exp_ces_num<- as.numeric(unlist(exp_ces))
  exp_ces_mean <- mean(exp_ces_num)
  exp_ces_Blb <- round(quantile(exp_ces_num, c(0.025, 0.975))[1], 3)
  exp_ces_Bub <- round(quantile(exp_ces_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_exp_ces<-pmcmc(exp_ces_num, twotail = TRUE) #significant

    #mean and quantile for boldness
  bold_ces_num<- as.numeric(unlist(bold_ces))
  bold_ces_mean <- mean(bold_ces_num)
  bold_ces_Blb <- round(quantile(bold_ces_num, c(0.025, 0.975))[1], 3)
  bold_ces_Bub <- round(quantile(bold_ces_num, c(0.025, 0.975))[2], 3)
  
  #pmcmc value
  p_bold_ces<-pmcmc(bold_ces_num, twotail = TRUE) #significant
  
  
```

#### *Activity is positively influence by body condition*

Body condition had a positive effect on activity in both the uninfected ($\beta$ = `r act_bc_mean`, 95% CI = `r act_bc_Blb`, `r act_bc_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_act_bc`, $R_{m}^{2}$ = `r R2_act_5_m`, $R_{c}^{2}$ = `r R2_act_5_c`) and experimentally infected states ($\beta$ = `r act_bc_mean_6`, 95% CI = `r act_bc_Blb_6`, `r act_bc_Bub_6`, $pMCMC_{\alpha = 0.05}$ = `r p_act_bc_6`, $R_{m}^{2}$ = `r R2_act_6_m`, $R_{c}^{2}$ = `r R2_act_6_c`). Body condition did not have a significant effect on exploration or shyness when uninfected (Exploration: $\beta$ = `r exp_bc_mean`, 95% CI = `r exp_bc_Blb`, `r exp_bc_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_exp_bc`; Shyness: $\beta$ = `r bold_bc_mean`, 95% CI = `r bold_bc_Blb`, `r bold_bc_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_bold_bc`) or when experimentally infected (Exploration: $\beta$ = `r exp_bc_mean_6`, 95% CI = `r exp_bc_Blb_6`, `r exp_bc_Bub_6`, $pMCMC_{\alpha = 0.05}$ = `r p_exp_bc_6`; Shyness: $\beta$ = `r bold_bc_mean_6`, 95% CI = `r bold_bc_Blb_6`, `r bold_bc_Bub_6`, $pMCMC_{\alpha = 0.05}$ = `r p_bold_bc_6`) (@fig-fig3).

```{r}
#| label: fig-fig3
#| fig-cap: Effect of body condition on activity of pumpkinseed sunfish (Lepomis gibbosus) in the uninfected state (i.e. before the experimental infection,trial 1-2, n=72) (A) and experimentally infected state (i.e. after the experimental infection,trial 3-4, n=60) (B). Solid line is the slope predicted by the model; dotted lines are the confidence intervals predicted by the model; points are the raw data z-scaled (N = 60). Activity and shyness are log-transformed. All variables are z-scaled.
#| out-width: 100%
#| fig-width: 8
#| fig-height: 5

#Effect of body condition on activity of pumpkinseed sunfish (Lepomis gibbosus) in the uninfected group (A) and experimentally infected group (B). Uninfected: N=72; Infected: N=60.


#################################
# Uninfected group
#################################
dat_C <- read.table("./output/dat_models_C.csv",header=T, sep=",")

 # First we want to create a design matrix.
newdat4 <- data.frame(intercept = 1,
                        z_bc = seq(min(dat_C$z_bc), max(dat_C$z_bc), length.out = 100))

  #activity for body condition
    pred_bc_c_brms <- posterior_epred(model5, re_formula = NA, newdata = newdat4)
  act_bc_c <- pred_bc_c_brms[,,"zlogactivity"]
  summ_act_bc_c <- apply(act_bc_c, 2, function(x) mean(x))
  summ_actL95_bc_c <- apply(act_bc_c, 2, function(x) quantile(x, 0.025))
  summ_actU95_bc_c <- apply(act_bc_c, 2, function(x) quantile(x, 0.975))
  
  #mean and sd for body condition
  mean_bc <- mean(dat_C$body_condition)
  sd_bc <- sd(dat_C$body_condition)
  mean_act_bc<- mean(dat_C$log_activity)
  sd_act_bc<- sd(dat_C$log_activity)
  
  #raw units
  #for body condition
  newdat4$bc<-(newdat4$z_bc * sd_bc) + mean_bc
  range(newdat4$bc)
  
  #for activity
  raw_act_bc_c<-(summ_act_bc_c * sd_act_bc) + mean_act_bc
  range(raw_act_bc_c) 
  raw_act_L95<-(summ_actL95_bc_c * sd_act_bc) + mean_act_bc
  range(raw_act_L95) 
  raw_act_U95<-(summ_actU95_bc_c * sd_act_bc) + mean_act_bc
  range(raw_act_U95) 

#raw_act_bc<- as.numeric(unlist(raw_act_bc_c))
#raw_act_bc_mean<-mean(raw_act_bc)
  
  #create dataframe
act_bc_c_dat <- cbind(newdat4, raw_act_bc_c, raw_act_L95, raw_act_U95)

#plot
   x1<- ggplot(data=dat_C)+
  geom_point(mapping = aes(x = body_condition, y = log_activity), shape = 16,color = "#6FA5A4")+
 geom_smooth(data = act_bc_c_dat, ggplot2::aes(x = bc, y = raw_act_bc_c), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#6FA5A4", size=1) +
  geom_smooth(data = act_bc_c_dat, ggplot2::aes(x = bc, y = raw_act_L95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#6FA5A4", size=0.8)+
  geom_smooth(data = act_bc_c_dat, ggplot2::aes(x = bc, y = raw_act_U95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#6FA5A4", size=0.8)+
   theme_classic() +
    draw_image("./img/no_parasite.png", x= -1,y = 4, scale = 20) +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("Body condition (g/cm)"), y = TeX("Distance swam$_{log_{2}}$"), title = "")+
      annotate("text", x = 0.028, y = 2.4, label = TeX(paste0("$beta_{bc}$ = ", " 0.21 ", " 95%CI: 0.04, 0.39**")), size =3, color = "black") 


#################################
# Infected group
#################################

  dat_parasite <- read.table("./output/dat_models_E.csv",header=T, sep=",")

#Predictive values for body condition in infected group
# matrix.
newdat4 <- data.frame(intercept = 1,
                        z_bc = seq(min(dat_parasite$z_bc), max(dat_parasite$z_bc), length.out = 100),
                        z_dens = 0)

  #activity for body condition
    pred_bc_brms <- posterior_epred(model6_1, re_formula = NA, newdata = newdat4)
  act_bc <- pred_bc_brms[,,"zlogactivity"]
  summ_act_bc <- apply(act_bc, 2, function(x) mean(x))
  summ_actL95_bc <- apply(act_bc, 2, function(x) quantile(x, 0.025))
  summ_actU95_bc <- apply(act_bc, 2, function(x) quantile(x, 0.975))
  
   #mean and sd for body condition
  mean_bc <- mean(dat_parasite$body_condition)
  sd_bc <- sd(dat_parasite$body_condition)
  mean_act_bc<- mean(dat_parasite$log_activity)
  sd_act_bc<- sd(dat_parasite$log_activity)
  
  #raw units
  #for body condition
  newdat4$bc<-(newdat4$z_bc * sd_bc) + mean_bc
  range(newdat4$bc)
  
  #for activity
  raw_act_bc<-(summ_act_bc * sd_act_bc) + mean_act_bc
  range(raw_act_bc) 
  raw_act_L95<-(summ_actL95_bc * sd_act_bc) + mean_act_bc
  range(raw_act_L95) 
  raw_act_U95<-(summ_actU95_bc * sd_act_bc) + mean_act_bc
  range(raw_act_U95) 
  #create dataframe
act_bc_dat <- cbind(newdat4, raw_act_bc, raw_act_L95, raw_act_U95)

#plot
x2<- ggplot(data=dat_parasite)+
  geom_point(mapping = aes(x = body_condition, y = log_activity), shape = 16,color = "#9A6FA5")+
 geom_smooth(data = act_bc_dat, ggplot2::aes(x = bc, y = raw_act_bc), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#9A6FA5", size=1) +
  geom_smooth(data = act_bc_dat, ggplot2::aes(x = bc, y = raw_act_L95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#9A6FA5", size=0.8)+
  geom_smooth(data = act_bc_dat, ggplot2::aes(x = bc, y = raw_act_U95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#9A6FA5", size=0.8)+
   theme_classic() +
 draw_image("./img/parasite.png", x= -1,y = 1, scale = 100)+
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("Body condition (g/cm)"), y = TeX("Distance swam$_{log_{2}}$"), title = "")+
 annotate("text", x = 0.025, y = 1.7, label = TeX(paste0("$beta_{bc}$ = "," 0.26 ", " 95%CI: 0.089,0.426**")), size=3, color = "black")

  
 x<- plot_grid(
  x1,x2,
  labels = "AUTO", ncol = 2)

  ggsave("./output/figures/fig3.png", plot = x, width = 22, height = 12, units = "cm")
  fig3 <- image_read("./output/figures/fig3.png")
  fig3
```

#### *Activity decrease with black spot density following an experimental infection*

When looking at the experimentally infected fish, parasite density had a significant negative effect on activity ($\beta$ = `r act_pl_mean`, 95% CI = `r act_pl_Blb`, `r act_pl_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_act_pl`, $R_{^2}$ = 0.068). We did not capture a significant effect of parasite density on exploration ($\beta$ = `r exp_pl_mean`, 95% CI = `r exp_pl_Blb`, `r exp_pl_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_exp_pl`) and shyness ($\beta$ = `r bold_pl_mean`, 95% CI = `r bold_pl_Blb`, `r bold_pl_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_bold_pl`). When looking at both parasite species separately,surprisingly we found a significant negative effect of black spot density on activity ($\beta$ = `r act_bs_mean`, 95% CI = `r act_bs_Blb`, `r act_bs_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_act_bs`, $R_{m}^{2}$ = `r R2_act_7_m`, $R_{c}^{2}$ = `r R2_act_7_c`). We find worth mentioning that parasite species seem to have an opposite effect on each trait: cestode density tend to decrease exploration ($\beta$ = `r exp_ces_mean`, 95% CI = `r exp_ces_Blb`, `r exp_ces_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_exp_ces`) and increase shyness (i.e. decrease boldness) ($\beta$ = `r bold_ces_mean`, 95% CI = `r bold_ces_Blb`, `r bold_ces_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_bold_ces`), while black spot density tend to increase exploration ($\beta$ = `r exp_bs_mean`, 95% CI = `r exp_bs_Blb`, `r exp_bs_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_exp_bs`) and decrease shyness (i.e. fish tend to be bolder) ($\beta$ = `r bold_bs_mean`, 95% CI = `r bold_bs_Blb`, `r bold_bs_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_bold_bs`). Activity was not impacted at all by cestode density ($\beta$ = `r act_ces_mean`, 95% CI = `r act_ces_Blb`, `r act_ces_Bub`, $pMCMC_{\alpha = 0.05}$ = `r p_act_ces`) (@fig-fig4).

```{r}
#| label: fig-fig4
#| fig-cap: Effect of cestode and black spot density on shyness (A), exploration (B) and activity (C) of pumpkinseed sunfish (Lepomis gibbosus) after an experimental infection. Solid line is the slope predicted by the model; dotted lines are the confidence intervals predicted by the model; points are the raw data z-scaled (N = 60). Activity and shyness are log-transformed. All variables are z-scaled.
#| out-width: 100%
#| fig-width: 4
#| fig-height: 10

#import data
dat_parasite <- read.table("./output/dat_models_parasite.csv",header=T, sep=",")

# Lets create the predictions with the posterior for each variable. Here, we want to vary ces, but keep the other variables at the mean
# First we want to create a design matrix. 
  newdat <- data.frame(intercept = 1, z_ces = seq(min(dat_parasite$z_ces), max(dat_parasite$z_ces), length.out = 100),
                        z_bs_2 = 0,
                        z_bc = 0)

  # Now extract the posterior dist for each parameter for boldness 
    #post <- as_draws_df(model7, variables = "^b", regex = TRUE)
    #post <- post[,grep("b_logboldness", colnames(post))]

  # Make the predictions. Here, each column is now a different combination of parameters, i.e., 1 MCMC iteration), and each row is the values you want to predict, only z_ces varies
  #pred_ces <- apply(t(post), 2, function(x) as.matrix(newdat) %*% x)
  
     #sum_pred <- apply(pred_ces, 1, function(x) mean(x))
  #sum_predL95 <- apply(pred_ces, 1, function(x) quantile(x, 0.025))
  #sum_predU95 <- apply(pred_ces, 1, function(x) quantile(x, 0.975))
  
  # Now create the dataframe
  #boldness_ces_dat <- cbind(newdat, logbold = sum_pred, logbold_L95 = sum_predL95, logboldU95 = sum_predU95)

#################################
# BOLDNESS PREDICTIONS
#################################
  #Make predictions from our model to build slope and confidence intervals
  #FOR CESTODES

  pred_ces_brms <- posterior_epred(model7_2, re_formula = NA, newdata = newdat)
  bold_ces <- pred_ces_brms[,,"zlogboldness"]
  summ_bold_ces <- apply(bold_ces, 2, function(x) mean(x))
  summ_boldL95_ces <- apply(bold_ces, 2, function(x) quantile(x, 0.025))
  summ_boldU95_ces <- apply(bold_ces, 2, function(x) quantile(x, 0.975))
  
     #mean and sd for boldness and parasite densities
  #boldness
  mean_bold <- mean(dat_parasite$log_boldness)
  sd_bold <- sd(dat_parasite$log_boldness)
  #bs
  mean_bs<- mean(dat_parasite$dens_bs2)
  sd_bs<- sd(dat_parasite$dens_bs2)
  #cestode
  mean_ces<- mean(dat_parasite$dens_ces)
  sd_ces<- sd(dat_parasite$dens_ces)
  
  #raw units
  #for cestode
  newdat$ces<-(newdat$z_ces * sd_ces) + mean_ces
  range(newdat$ces)
  
  #for boldness-ces
  raw_bold_ces<-(summ_bold_ces * sd_bold) + mean_bold
  range(raw_bold_ces) 
  raw_bold_ces_L95<-(summ_boldL95_ces * sd_bold) + mean_bold
  range(raw_bold_ces_L95) 
  raw_bold_ces_U95<-(summ_boldU95_ces * sd_bold) + mean_bold
  range(raw_bold_ces_U95) 
  
  #create dataframe
boldness_ces_dat <- cbind(newdat, raw_bold_ces, raw_bold_ces_L95, raw_bold_ces_U95)
  
  # Now, check the following is true
 #all(sum_pred == summ_bold)

  #FOR BS NOW
   newdat2 <- data.frame(intercept = 1, z_ces = 0,
                        z_bs_2 = seq(min(dat_parasite$z_bs_2), max(dat_parasite$z_bs_2), length.out = 100),
                        z_bc = 0)

pred_bs_brms <- posterior_epred(model7_2, re_formula = NA, newdata = newdat2)
  boldness_bs <- pred_bs_brms[,,"zlogboldness"]
  summ_bold_bs <- apply(boldness_bs, 2, function(x) mean(x))
  summ_boldL95_bs <- apply(boldness_bs, 2, function(x) quantile(x, 0.025))
  summ_boldU95_bs <- apply(boldness_bs, 2, function(x) quantile(x, 0.975))
  
   #raw units
  #for bs
  newdat2$bs<-(newdat2$z_bs_2 * sd_bs) + mean_bs
  range(newdat2$bs)
  
  #for boldness-bs
  raw_bold_bs<-(summ_bold_bs * sd_bold) + mean_bold
  range(raw_bold_bs) 
  raw_bold_bs_L95<-(summ_boldL95_bs * sd_bold) + mean_bold
  range(raw_bold_bs_L95) 
  raw_bold_bs_U95<-(summ_boldU95_bs * sd_bold) + mean_bold
  range(raw_bold_bs_U95) 
  
boldness_bs_dat <- cbind(newdat2, raw_bold_bs, raw_bold_bs_L95, raw_bold_bs_U95)
  
#for parasite load
 #Predictive values for parasite load
 # matrix.
#newdat5 <- data.frame(intercept = 1,
                       # z_bc = 0,
                      #  z_bs = seq(min(dat_parasite$z_bs), max(dat_parasite$z_bs), length.out = 100))

#for parasite density
    #pred_pl_brms <- posterior_epred(model6, re_formula = NA, newdata = newdat5)
  #bold_pl <- pred_pl_brms[,,"logboldness"]
  #summ_bold_pl <- apply(bold_pl, 2, function(x) mean(x))
  #summ_boldL95_pl <- apply(bold_pl, 2, function(x) quantile(x, 0.025))
  #summ_boldU95_pl <- apply(bold_pl, 2, function(x) quantile(x, 0.975))
  
  #create dataframe
#bold_pl_dat <- cbind(newdat5, summ_bold_pl, summ_boldL95_pl, summ_boldU95_pl)
  
  # Another way to do this, but you need to know that this is producting PREDICTION INTERVALS not confidence intervals....which is why these are INSANELY wide.
 # pred_ces <- predict(model7, re_formula = NA, newdata = newdat)

  # Now add the predcitions and ses to the new data
  #newdat2 <- cbind(newdat, logbold = pred_ces[,1,"logboldness"], logboldlCI = pred_ces[,3,"logboldness"], logbolduCI = pred_ces[,4,"logboldness"],
                           #logact = pred_ces[,1,"logactivity"], loglogactlCI = #pred_ces[,3,"logactivity"], loglogactUCI = pred_ces[,4,"logactivity"],
                           #explore = pred_ces[,1,"exploration"], explorelCI = pred_ces[,3,"exploration"], exploreUCI = pred_ces[,4,"exploration"])

  #figure 1
  n1<- ggplot(data=dat_parasite)+
  geom_point(mapping = aes(x = dens_ces, y = log_boldness), color = "#9A6FA5")+
  geom_smooth(data = boldness_ces_dat, ggplot2::aes(x = ces, y = raw_bold_ces), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#9A6FA5", size=1) +
  geom_smooth(data = boldness_ces_dat, ggplot2::aes(x = ces, y = raw_bold_ces_L95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#9A6FA5", size=0.8)+
  geom_smooth(data = boldness_ces_dat, ggplot2::aes(x = ces, y = raw_bold_ces_U95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#9A6FA5", size=0.8) + 
    geom_point(mapping = aes(x = dens_bs2, y = log_boldness), color = "#6FA5A4")+
  geom_smooth(data = boldness_bs_dat, ggplot2::aes(x = bs, y = raw_bold_bs), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#6FA5A4", size=1) +
  geom_smooth(data = boldness_bs_dat, ggplot2::aes(x = bs, y = raw_bold_bs_L95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#6FA5A4", size=0.8)+
  geom_smooth(data = boldness_bs_dat, ggplot2::aes(x = bs, y = raw_bold_bs_U95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#6FA5A4", size=0.8)+
    #geom_point(mapping = aes(x = z_pl, y = log_boldness),shape = 21, color = "#A2A2A2") +
  # geom_smooth(data = bold_pl_dat, ggplot2::aes(x = z_pl, y = summ_bold_pl), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#A2A2A2", size=1) +
 # geom_smooth(data = bold_pl_dat, ggplot2::aes(x = z_pl, y = summ_boldL95_pl), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#A2A2A2", size=0.8)+
 # geom_smooth(data = bold_pl_dat, ggplot2::aes(x = z_pl, y = summ_boldU95_pl), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#A2A2A2", size=0.8)+
   theme_classic() +
 draw_image("./img/blackspots.png", x = 20, y = -1.2, scale = 6)+
 draw_image("./img/cestodes.png", x = 24, y = -0.5, scale = 6) +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX(""), y = TeX("Emergence time$_{log_{2}}$"), title = "") +
    annotate("text", x = 15, y = 1.6, label = TeX(paste0("$beta_{bs}$ = ", " -0.09 ", " 95%CI: -0.29, 0.10")), size =3, color = "#059687") + 
  annotate("text", x = 15, y = 1.8, label = TeX(paste0("$beta_{ces}$ = "," 0.11 ", " 95%CI: -0.06, 0.39")), size=3, color = "#8F05B3")
  
#################################
# EXPLORATION PREDICTIONS
#################################
  #for cestode
    pred_ces_brms <- posterior_epred(model7_2, re_formula = NA, newdata = newdat)
  exp_ces <- pred_ces_brms[,,"zexploration"]
  summ_exp_ces <- apply(exp_ces, 2, function(x) mean(x))
  summ_expL95_ces <- apply(exp_ces, 2, function(x) quantile(x, 0.025))
  summ_expU95_ces <- apply(exp_ces, 2, function(x) quantile(x, 0.975))
  
  #mean and sd for exploration
  mean_exp<-mean(dat_parasite$exploration)
  sd_exp<-sd(dat_parasite$exploration)
  
  #raw units
  #for ces
  newdat$ces<-(newdat$z_ces * sd_ces) + mean_ces
  range(newdat$ces)
  
  #for exploration-ces
  raw_exp_ces<-(summ_exp_ces * sd_exp) + mean_exp
  range(raw_exp_ces) 
  raw_exp_ces_L95<-(summ_expL95_ces * sd_exp) + mean_exp
  range(raw_exp_ces_L95) 
  raw_exp_ces_U95<-(summ_expU95_ces * sd_exp) + mean_exp
  range(raw_exp_ces_U95) 
  
  #create dataframe
exp_ces_dat <- cbind(newdat, raw_exp_ces, raw_exp_ces_L95, raw_exp_ces_U95)
  
  #for bs
   pred_bs_brms <- posterior_epred(model7_2, re_formula = NA, newdata = newdat2)
  exp_bs <- pred_bs_brms[,,"zexploration"]
  summ_exp_bs <- apply(exp_bs, 2, function(x) mean(x))
  summ_expL95_bs <- apply(exp_bs, 2, function(x) quantile(x, 0.025))
  summ_expU95_bs <- apply(exp_bs, 2, function(x) quantile(x, 0.975))
  
   #for exploration-bs
  raw_exp_bs<-(summ_exp_bs * sd_exp) + mean_exp
  range(raw_exp_bs) 
  raw_exp_bs_L95<-(summ_expL95_bs * sd_exp) + mean_exp
  range(raw_exp_ces_L95) 
  raw_exp_bs_U95<-(summ_expU95_bs * sd_exp) + mean_exp
  range(raw_exp_bs_U95) 
  
  #create dataframe
exp_bs_dat <- cbind(newdat2, raw_exp_bs, raw_exp_bs_L95, raw_exp_bs_U95)
  
    #for parasite load
   # pred_pl_brms <- posterior_epred(model6, re_formula = NA, newdata = newdat5)
  #exp_pl <- pred_pl_brms[,,"exploration"]
  #summ_exp_pl <- apply(exp_pl, 2, function(x) mean(x))
  #summ_expL95_pl <- apply(exp_pl, 2, function(x) quantile(x, 0.025))
  #summ_expU95_pl <- apply(exp_pl, 2, function(x) quantile(x, 0.975))
  
  #create dataframe
#exp_pl_dat <- cbind(newdat5, summ_exp_pl, summ_expL95_pl, summ_expU95_pl)
  
#figure 2
n2<-ggplot(data=dat_parasite)+
  geom_point(mapping = aes(x = dens_ces, y = exploration), color = "#9A6FA5")+
 geom_smooth(data = exp_ces_dat, ggplot2::aes(x = ces, y = raw_exp_ces), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#9A6FA5", size=1) +
  geom_smooth(data = exp_ces_dat, ggplot2::aes(x = ces, y = raw_exp_ces_L95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#9A6FA5", size=0.8)+
  geom_smooth(data = exp_ces_dat, ggplot2::aes(x = ces, y = raw_exp_ces_U95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#9A6FA5", size=0.8)+
  geom_point(mapping = aes(x = dens_bs2, y = exploration), color = "#6FA5A4") +
   geom_smooth(data = exp_bs_dat, ggplot2::aes(x = bs, y = raw_exp_bs), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#6FA5A4", size=1) +
  geom_smooth(data = exp_bs_dat, ggplot2::aes(x = bs, y = raw_exp_bs_L95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#6FA5A4", size=0.8)+
  geom_smooth(data = exp_bs_dat, ggplot2::aes(x = bs, y = raw_exp_bs_U95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#6FA5A4", size=0.8)+
    # geom_point(mapping = aes(x = z_pl, y = exploration),shape = 21, color = "#A2A2A2") +
   #geom_smooth(data = exp_pl_dat, ggplot2::aes(x = z_pl, y = summ_exp_pl), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#A2A2A2", size=1) +
  #geom_smooth(data = exp_pl_dat, ggplot2::aes(x = z_pl, y = summ_expL95_pl), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#A2A2A2", size=0.8)+
  #geom_smooth(data = exp_pl_dat, ggplot2::aes(x = z_pl, y = summ_expU95_pl), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#A2A2A2", size=0.8)+
   theme_classic() +
 draw_image("./img/blackspots.png", x = 20, y = -0.16, scale = 6)+
  draw_image("./img/cestodes.png", x = 24, y = -0.22, scale = 6) +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("Parasite density (no/g)"), y = TeX("Surface covered (%)"), title = "") +
  annotate("text", x = 15, y = 0.45, label = TeX(paste0("$beta_{bs}$ = ", " 0.10 ", " 95%CI: 0.09, -0.07")), size =3, color = "#059687") + 
  annotate("text", x = 15, y = 0.47, label = TeX(paste0("$beta_{ces}$ = "," -0.11  ", " 95%CI: -0.29, 0.07")), size=3, color = "#8F05B3")

#################################
# ACTIVITY PREDICTIONS
#################################
  #for cestode
    pred_ces_brms <- posterior_epred(model7_2, re_formula = NA, newdata = newdat)
  act_ces <- pred_ces_brms[,,"zlogactivity"]
  summ_act_ces <- apply(act_ces, 2, function(x) mean(x))
  summ_actL95_ces <- apply(act_ces, 2, function(x) quantile(x, 0.025))
  summ_actU95_ces <- apply(act_ces, 2, function(x) quantile(x, 0.975))
    
    #mean and sd for activity
  mean_act<-mean(dat_parasite$log_activity)
  sd_act<-sd(dat_parasite$log_activity)
  
    #for activity-ces
  raw_act_ces<-(summ_act_ces * sd_act) + mean_act
  range(raw_act_ces) 
  raw_act_ces_L95<-(summ_actL95_ces * sd_act) + mean_act
  range(raw_act_ces_L95) 
  raw_act_ces_U95<-(summ_actU95_ces * sd_act) + mean_act
  range(raw_act_ces_U95) 
  
  #create dataframe
act_ces_dat <- cbind(newdat, raw_act_ces, raw_act_ces_L95, raw_act_ces_U95)

  #for bs
   pred_bs_brms <- posterior_epred(model7_2, re_formula = NA, newdata = newdat2)
  act_bs <- pred_bs_brms[,,"zlogactivity"]
  summ_act_bs <- apply(act_bs, 2, function(x) mean(x))
  summ_actL95_bs <- apply(act_bs, 2, function(x) quantile(x, 0.025))
  summ_actU95_bs <- apply(act_bs, 2, function(x) quantile(x, 0.975))
  
  #for activity-bs
  raw_act_bs<-(summ_act_bs * sd_act) + mean_act
  range(raw_act_bs) 
  raw_act_bs_L95<-(summ_actL95_bs * sd_act) + mean_act
  range(raw_act_bs_L95) 
  raw_act_bs_U95<-(summ_actU95_bs * sd_act) + mean_act
  range(raw_act_bs_U95) 
  
  #create dataframe
act_bs_dat <- cbind(newdat2, raw_act_bs, raw_act_bs_L95, raw_act_bs_U95)
  
#for parasite load
    #pred_pl_brms <- posterior_epred(model6, re_formula = NA, newdata = newdat5)
  #act_pl <- pred_pl_brms[,,"logactivity"]
  #summ_act_pl <- apply(act_pl, 2, function(x) mean(x))
  #summ_actL95_pl <- apply(act_pl, 2, function(x) quantile(x, 0.025))
  #summ_actU95_pl <- apply(act_pl, 2, function(x) quantile(x, 0.975))
  
  #create dataframe
#act_pl_dat <- cbind(newdat5, summ_act_pl, summ_actL95_pl, summ_actU95_pl)

  #figure 3
n3<-ggplot(data=dat_parasite)+
geom_point(mapping = aes(x = dens_ces, y = log_activity),color = "#9A6FA5")+
 geom_smooth(data = act_ces_dat, ggplot2::aes(x = ces, y = raw_act_ces), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#9A6FA5", size=1) +
  geom_smooth(data = act_ces_dat, ggplot2::aes(x = ces, y = raw_act_ces_L95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#9A6FA5", size=0.8)+
  geom_smooth(data = act_ces_dat, ggplot2::aes(x = ces, y = raw_act_ces_U95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#9A6FA5", size=0.8)+
  geom_point(mapping = aes(x = dens_bs2, y = log_activity), color = "#6FA5A4") +
   geom_smooth(data = act_bs_dat, ggplot2::aes(x = bs, y = raw_act_bs), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#6FA5A4", size=1) +
  geom_smooth(data = act_bs_dat, ggplot2::aes(x = bs, y = raw_act_bs_L95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#6FA5A4", size=0.8)+
  geom_smooth(data = act_bs_dat, ggplot2::aes(x = bs, y = raw_act_bs_U95), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#6FA5A4", size=0.8)+
   theme_classic() +
   #geom_point(mapping = aes(x = z_pl, y = log_activity),shape = 21, color = "#A2A2A2") +
   #geom_smooth(data = act_ces_dat, ggplot2::aes(x = z_pl, y = summ_act_pl), method =  "loess", formula = y~x, se = FALSE,lty = "solid", color = "#A2A2A2", size=1) +
  #geom_smooth(data = act_ces_dat, ggplot2::aes(x = z_pl, y = summ_actL95_pl), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#A2A2A2", size=0.8)+
  #geom_smooth(data = act_ces_dat, ggplot2::aes(x = z_pl, y = summ_actU95_pl), method =  "loess", formula = y~x, se = FALSE,lty = "dashed", color = "#A2A2A2", size=0.8)+
  draw_image("./img/blackspots.png", x = 20, y = -1.5, scale = 6) +
  draw_image("./img/cestodes.png", x = 24, y = -0.8, scale = 6) +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX(""), y = TeX("Distance swam$_{log_{2}}$"), title = "") +
      annotate("text", x = 15, y = 1.6, label = TeX(paste0("$beta_{bs}$ = ", " -0.21 ", " 95%CI: -0.39, -0.03 **")), size =3, color = "#059687") +
 annotate("text", x = 15, y = 1.8, label = TeX(paste0("$beta_{ces}$ = "," 0.05 ", " 95%CI: -0.13, 0.24")), size=3, color = "#8F05B3")

p<-plot_grid(
  n1, n2, n3,
  labels = "AUTO", ncol = 3)

ggsave("./output/figures/fig4.png", plot = p, width = 28, height = 12, units = "cm")

fig4 <- image_read("./output/figures/fig4.png")
fig4
```

#### *Correlation of change between the traits and their average behaviour*

Looking at the correlation of change between traits (i.e. how individuals change in one trait is correlated with another trait changes after the experimental infection) (@fig-fig5), we found a negative correlation of change between exploration-shyness and shyness-activity. Individuals that increased the most in their exploratory behaviour tended to have the strongest negative change in shyness ($cor_{id}$ = `r cor_b_exp_mean`, 95% CI = `r Blb_cor_b_exp_E`, `r Bub_cor_b_exp_E`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_cor_bold_exp_E`). Fish that tended to have strong negative change in their shyness behaviour tended to have a positive change in their activity ($cor_{id}$ = `r cor_b_act_mean`, 95% CI = `r Blb_cor_b_act_E`, `r Bub_cor_b_act_E`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_cor_bold_act_E`). We found a positive correlation of change between exploration-activity, meaning that when a fish had a strong positive change in exploration, they tended to have a strong positive change in their activity as well ($cor_{id}$ = `r cor_act_exp_E_mean`, 95% CI = `r Blb_cor_act_exp_E`, `r Bub_cor_act_exp_E`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_cor_act_exp_E`). All of these correlations of change are low to medium correlations and not significant.

Looking at how individuals changes in their behaviour compared to the average of that same behaviour (@fig-fig5), we found that fish that were more shy tended to decrease more their shyness behaviour compared to bolder fish after the experimental infection ($cor_{id}$ = `r cor_bold_I_E_mean`, 95% CI = `r Blb_cor_bold_I_E`, `r Bub_cor_bold_I_E`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_cor_bold_I_E`). Less exploratory fish had a larger increase in their exploratory behaviour after the experimental infection ($cor_{id}$ = `r cor_exp_I_E_mean`, 95% CI = `r Blb_cor_exp_I_E`, `r Bub_cor_exp_I_E`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_cor_exp_I_E`). More active fish tended to have the strongest negative change, and less active fish tended to have a bigger increase in activity after the experimental infection ($cor_{id}$ = `r cor_act_I_E_mean`, 95% CI = `r Blb_cor_act_I_E`, `r Bub_cor_act_I_E`, $pMCMC_{\alpha = 0.05}$ = `r pmcmc_cor_act_I_E`).

```{r}
#| label: parasite density per cage
#| output: false
#| warning: false

#looking at the correlation between bs and cestodes
cor1<-cor(all_data$dens_bs2,all_data$dens_ces)
plot1<-plot(all_data$dens_bs2,all_data$dens_ces)

#effect of cage in parasite density
plot2<- ggplot(data=all_data)+
  geom_point(mapping = aes(x = cage, y = dens_bs2, color = factor(ID_fish))) +
   theme_classic()+ theme(legend.position = "none") + xlab("Cage number") + ylab("Black spot density")

 
plot3<- ggplot(data=all_data)+
  geom_point(mapping = aes(x = cage, y = dens_ces, color = factor(ID_fish))) +
   theme_classic() + theme(legend.position = "none") + xlab("Cage number") + ylab("Cestode density") 


moy_dens_bs<-aggregate(dens_bs2 ~ cage, all_data, mean)
moy_dens_ces<-aggregate(dens_ces ~ cage, all_data, mean)
moy_dens_parasite<-aggregate(dens_tot ~ cage, all_data, mean)





```

```{r}
#| label: fig-fig5
#| fig-cap: (A) Correlation of slopes of change between traits (emergence time, surface covered and distance swam) and their standard error in pumpkinseed sunfish (Lepomis gibbosus) after an experimental infection. Blue dots are individuals, n = 60; blue lines are standard errors; red lines are the mean behaviours. Above the red line is a positive change in the slope, below is a negative change. All variables are z-scaled. (B) Correlation between the slope of change of traits and their average behaviour (emergence time, surface covered and distance swam) and their standard error in pumpkinseed sunfish (Lepomis gibbosus) after an experimental infection. Gold dots are individuals, n = 60; gold lines are the standard errors; red lines are the intercept behaviours. On the x-axis; above the red line is above the average behaviour and below the red line is below average. On the y-axis; above the red line is a positive change in the slope of a trait, below is a negative change. All variables are z-scaled.
#| out-width: 100%
#| fig-width: 7
#| fig-height: 4

dat_slopes <- read.table("./output/dat_slopes.csv",header=T, sep=",")

###Plot dataframe
#boldness and exploration E

k1<-ggplot(data= dat_slopes)+
  theme_classic()+
  geom_point(aes(x=bold_E,y=exp_E), color ="cyan4", size = 3)+
  geom_segment(data =dat_slopes,
               aes(x=bold_E, xend=bold_E, y=exp_E, yend=exp_E+se_exp_E), size = 0.2,
               color="paleturquoise3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=bold_E, xend=bold_E, y=exp_E, yend=exp_E-se_exp_E), size = 0.2,
               color="paleturquoise3"
               )+
  geom_segment(data =dat_slopes,
               aes(x=bold_E, xend=bold_E+se_b_E, y=exp_E, yend=exp_E), size = 0.2,
               color="paleturquoise3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=bold_E, xend=bold_E-se_b_E, y=exp_E, yend=exp_E), size = 0.2,
               color="paleturquoise3"
               ) +
  geom_vline(xintercept=0, color = "red2")+
  geom_hline(yintercept=0, color = "red2") +
      labs(y = TeX(paste0("Surface covered (%)", " Slope ", "$\\beta_{id}$")),
           x = TeX(paste0("Emergence time$_{log_{2}}$", " Slope ", "$\\beta_{id}$")))+
  annotate("text", x = -1, y = -0.25, label = TeX(paste0("$cor_{id}$ = ", " -0.14 ", " 95%CI: -0.76, 0.59")), size =2.5, color = "red3")
#boldness and activity E
k2<-ggplot(data= dat_slopes)+
  theme_classic()+
  geom_point(aes(x=bold_E,y=act_E), color ="cyan4", size = 3)+
  geom_segment(data =dat_slopes,
               aes(x=bold_E, xend=bold_E, y=act_E, yend=act_E+se_act_E), size = 0.2,
               color="paleturquoise3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=bold_E, xend=bold_E, y=act_E, yend=act_E-se_act_E), size = 0.2,
               color="paleturquoise3"
               )+
  geom_segment(data =dat_slopes,
               aes(x=bold_E, xend=bold_E+se_b_E, y=act_E, yend=act_E), size = 0.2,
               color="paleturquoise3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=bold_E, xend=bold_E-se_b_E, y=act_E, yend=act_E), size = 0.2,
               color="paleturquoise3"
               ) +
  geom_vline(xintercept=0, color = "red2")+
  geom_hline(yintercept=0, color = "red2") +
      labs(y = TeX(paste0("Distance swam$_{log_{2}}$", " Slope ", "$\\beta_{id}$")),
           x = TeX(paste0("Emergence time$_{log_{2}}$", " Slope ", "$\\beta_{id}$")))+
    annotate("text", x = -1, y = -1.5, label = TeX(paste0("$cor_{id}$ = ", " -0.31 ", " 95%CI: -0.82, 0.42")), size =2.5, color = "red3")

#activity and exploration E
k3<-ggplot(data= dat_slopes)+
  theme_classic()+
  geom_point(aes(x=exp_E,y=act_E), color ="cyan4", size = 3)+
  geom_segment(data =dat_slopes,
               aes(x=exp_E, xend=exp_E, y=act_E, yend=act_E+se_act_E), size = 0.2,
               color="paleturquoise3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=exp_E, xend=exp_E, y=act_E, yend=act_E-se_act_E), size = 0.2,
               color="paleturquoise3"
               )+
  geom_segment(data =dat_slopes,
               aes(x=exp_E, xend=exp_E+se_exp_E, y=act_E, yend=act_E), size = 0.2,
               color="paleturquoise3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=exp_E, xend=exp_E-se_exp_E, y=act_E, yend=act_E), size = 0.2,
               color="paleturquoise3"
               )+
  geom_vline(xintercept=0, color = "red2")+
  geom_hline(yintercept=0, color = "red2") +
      labs(y = TeX(paste0("Distance swam$_{log_{2}}$", " Slope ", "$\\beta_{id}$")),
           x = TeX(paste0("Surface covered (%)", " Slope ", "$\\beta_{id}$")))+
  annotate("text", x = 0.8, y = -1.5, label = TeX(paste0("$cor_{id}$ = ", " 0.25 ", " 95%CI: -0.51, 0.80")), size =2.5, color = "red3")

 
kk<- plot_grid(
  k1, k2, k3, ncol = 3)

#Boldness I  vs Bold E
k4<-ggplot(data= dat_slopes)+
  theme_classic()+
  geom_point(aes(x=bold_I,y=bold_E), color ="darkgoldenrod", size = 3)+
  geom_segment(data =dat_slopes,
               aes(x=bold_I, xend=bold_I, y=bold_E, yend=bold_E+se_b_E), size = 0.2, color ="lemonchiffon3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=bold_I, xend=bold_I, y=bold_E, yend=bold_E-se_b_E), size = 0.2,color ="lemonchiffon3"
               )+
  geom_segment(data =dat_slopes,
               aes(x=bold_I, xend=bold_I+se_b_I, y=bold_E, yend=bold_E), size = 0.2,color ="lemonchiffon3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=bold_I, xend=bold_I-se_b_I, y=bold_E, yend=bold_E), size = 0.2,color ="lemonchiffon3"
               ) +
  geom_vline(xintercept=0, color = "red2")+
  geom_hline(yintercept=0, color = "red2") +
     labs(x = TeX(paste0("Emergence time$_{log_{2}}$", " (personality - intercept)")),
           y = TeX(paste0("Emergence time$_{log_{2}}$", " Slope ", " $\\beta_{id}$")))+
  annotate("text", x = 0.6, y = -1.3, label = TeX(paste0("$cor_{id}$ = ", " -0.20 ", " 95%CI: -0.74, 0.54")), size =2.5, color = "red3")

#Exp I  vs Exp E
k5<-ggplot(data= dat_slopes)+
  theme_classic()+
  geom_point(aes(x=exp_I,y=exp_E), color ="darkgoldenrod", size = 3)+
  geom_segment(data =dat_slopes,
               aes(x=exp_I, xend=exp_I, y=exp_E, yend=exp_E+se_exp_E), size = 0.2,
               color ="lemonchiffon3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=exp_I, xend=exp_I, y=exp_E, yend=exp_E-se_exp_E), size = 0.2,
               color ="lemonchiffon3"
               )+
  geom_segment(data =dat_slopes,
               aes(x=exp_I, xend=exp_I+se_exp_I, y=exp_E, yend=exp_E), size = 0.2,
               color ="lemonchiffon3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=exp_I, xend=exp_I-se_exp_I, y=exp_E, yend=exp_E), size = 0.2,
               color ="lemonchiffon3"
               ) +
  geom_vline(xintercept=0, color = "red2")+
  geom_hline(yintercept=0, color = "red2") +
      labs(x = TeX(paste0("Surface covered (%)", " (personality - intercept)")),
           y = TeX(paste0("Surface covered (%)", " Slope ", " $\\beta_{id}$")))+
  annotate("text", x = -1.0, y = -0.1, label = TeX(paste0("$cor_{id}$ = ", " -0.27 ", " 95%CI: -0.80, 0.51")), size =2.5, color = "red3")

#act I  vs act E
k6<-ggplot(data= dat_slopes)+
  theme_classic()+
  geom_point(aes(x=act_I,y=act_E), color ="darkgoldenrod", size = 3)+
  geom_segment(data =dat_slopes,
               aes(x=act_I, xend=act_I, y=act_E, yend=act_E+se_act_E), size = 0.2,
               color ="lemonchiffon3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=act_I, xend=act_I, y=act_E, yend=act_E-se_act_E), size = 0.2,
               color ="lemonchiffon3"
               )+
  geom_segment(data =dat_slopes,
               aes(x=act_I, xend=act_I+se_act_I, y=act_E, yend=act_E), size = 0.2,
               color ="lemonchiffon3"
               ) +
     geom_segment(data =dat_slopes,
               aes(x=act_I, xend=act_I-se_act_I, y=act_E, yend=act_E), size = 0.2,
               color ="lemonchiffon3"
               ) +
  geom_vline(xintercept=0, color = "red2")+
  geom_hline(yintercept=0, color = "red2") +
      labs(x = TeX(paste0("Distance swam$_{log_{2}}$", " (personality - intercept)")),
           y = TeX(paste0("Distance swam$_{log_{2}}$", " Slope ", " $\\beta_{id}$")))+
   annotate("text", x = -0.8, y = -1, label = TeX(paste0("$cor_{id}$ = ", " -0.49 ", " 95%CI: -0.81, 0.11")), size =2.5, color = "red3")


 kkk<- plot_grid(
  k4, k5, k6, ncol = 3)
 
 lol<-plot_grid(kk,kkk,labels = "AUTO", ncol = 1)
 
 ggsave("./output/figures/fig5.png", plot = lol, width = 30, height = 20, units = "cm")

fig5 <- image_read("./output/figures/fig5.png")  
fig5

```


### Discussion
#### *Repeatability*

Shyness-boldness was not repeatable in our case; exploration was repeatable only in the uninfected status and activity was repeatable in both group. 

Multiple studies have look at the repeatability of exploration across a range of species: with the pumpkinseed sunfish (R = 0.40; Vic in prep); with the great tits (R = 0.27-0.66, [@Dingemanse_2002-wg]); with zebra fish (R = 0.35, @Thomson_2020-wg). In our case, we can say that we find low to moderate repeatability for exploration with R = 0.29 in the uninfected group; but it decrease in the infected group with R = 0.21. For shyness-boldness, a study on reef fish showed moderate repeatability (R = 0.38) for a short period in the lab and highly repeatable in the field (R= 0.69) [@White_2015-wg]. With the convict cichlid, a study found an average boldness repeatability of 0.30 and 0.31 for exploration [MazuÃ©_2015-wg]. We found low repeatability for boldness in our case, suggesting that the test was not appropriate for this spBehaviours are generally repeatable across contexts and a meta analysis found that the average repeatability for a wide variety of behaviours and taxon is 0.37 [Bell_2009-wg]. For activity, we found moderate repeatability ranging from 35% to 30% in the uninfected and infected group respectively. 

Since parasites didn't affect significantly exploration and boldness in our models, but we saw a significant increase of exploration and boldness over time, we think that fish may have being habituated to the test. Indeed, on a long period of time (in our case 2 months), individuals can become use to the test. It is hard to measure exploration as the novel environment might not be as novel as we want it to be for the fish when they do the test multiple times. Another recent study tried to measure boldness in pumpkinseed sunfish with a different test, but the trait was not repeatable as well. We know that pumpkinseed sunfish are, in general, bold and curious fish (M.G., personal observations). If all the individuals tested are rather bold, repeatability could be smaller as the variance is smaller.

#### *Behavioural syndromes*

We found some evidence that behavioural syndromes changed between the uninfected and infected group. We found significant correlations between shyness-activity and activity-exploration, but not for shyness-exploration. What is interesting is how these behavioural syndromes changes after the experimental infection; the strength of these correlations decrease. Variation in the correlation estimates varies grandly after the experimental infection. Some have suggested that parasites could change behavioural syndromes by affecting some traits without affecting others, which could change the way traits correlate with each other [@Poulin_2013-wg]. In our case, only activity seemed to be affected by the parasites, which could explain why behavioural syndromes differ before and after the experimental infection between shyness-activity and activity-exploration. Another study of @Poulin_2010-wg stated that most studies tend to compare the average value of a trait between uninfected and infected individuals; but looking into the relationship or behavioural syndromes between the traits should be investigated more.

#### *Parasites*

Parasites found and their effects in our study;
What is known on cestodes and BS;
What is commun with our study;
Competition between parasites;
Parasite manipulation hypothesis or other hypothesis for decrease activity;
Limits and ideas for next study;
What we found in a nutshell

Expliquer comment se font les infections pour expliquer la map: escargots moins Ã©tendus, moins de dispersions, parasite qui initie le contact, infection plus passive vs copÃ©podes plus infection active, se font manger par les poissons 


We experimentally infected our fish in a semi-natural caging experiment and found two species of parasite that are commonly known to infect pumpkinseed sunfish. Bass tapeworm are known to have many behavioural and physiological effects on their host, like a decrease in activity and oxygen consumption in an amphipod intermediate host (Franceschi et al., 2007), a decrease in predator avoidance and an increase in surface swimming in threespine stickleback (Gasterosteus aculeatus) (LoBue and Bell, 1993); and a decrease in standard and peak metabolic rates as well as a decrease in anti-predator response with simulated aerial attack (Guitard et al., 2022). Black spots are also known to affect behaviours and physiology of their host. In northern pike (Esox lucius), fish infected with black spot disease are smaller than uninfected fish between the ages of one and four years, and this difference increases with age (Harrison and Hadley, 1982). In addition, it has been shown that bold pumpkinseed sunfish had twice as many black spots as shy individuals (Wilson et al., 1993) and that pumpkinseed sunfish with a high black spot density and low body condition are less exploratory (Thelamon, in prep).
We found that, in our models, black spots were the ones significantly affecting activity of the fish. Bass tapeworms did not have any effects on the traits. We find important to state that both parasites seemed to have opposite effects on the behavioural traits. Some parasite species sharing a host at the same time can be in competition, and if they have opposite effects, it is possible that we don't see the magnitude of effects from each species of parasite. (Ã©tudes sur compÃ©tition des parasites). Bass tapeworms have a piscivirous fish as final host, while black spots need a piscivirous bird. If one parasite succeed in their transmission, the other one fails. A co-evolution between the two species is expected to avoid extinction (cours Ã  l'armement).     

Exploration and boldness tended to increase with black spot density and decrease with cestode density. On the contrary, activity was decreasing with black spot density but we did not see any effect from cestodes. The tendencies we see in our study is interesting, because it shows similar patterns to parasite manipulation mechanism: often, host become bolder (i.e. will take more risks), more exploratory. On the other hand, a decrease of activity could facilitate the predation on the host (i.e. less reactive to predators, easier to catch). An increase in boldness and/or a reduction in anti-predator reactions in infected individuals has been reported in stickleback (Gasterosteus aculeatus) infected with a cestode (Schistocephalus solidus) (Barber et al., 2004; Giles, 1983) , rats (Rattus norvegicus) infected with Toxoplasma gondii (Berboy et al., 2000; Webster et al., 1994), mice (Mus musculus) infected with a protozoan (Eimeria vermiformis) and a nematode (Heligmosomoides polygyrus) respectively ( Kavaliers and Colwell, 1995; Kavaliers et al., 1997).


Many trematodes species are known to manipulate their host behaviour to complete their transmission (Ã©tudes sur la manipulation parasitaire des trÃ©matodes). Pumpkinseed sunfish with black spot disease could be good candidates for this phenomenon, since this species of trematode have a complex life cycle, and their intermediate host, the pumpkinseed sunfish, need to be eaten by a piscivirous bird to complete the parasite transmission. It would be advantageous for the parasites to manipulate the host behaviour to facilitate their transmission. We found that activity decrease with black spot density, althought we did not see a significant decrease of activity before and after the experimental infection. Like discussed earlier, parasites might affect the variance of a trait without changing their average value (Poulin, 2013). Any change in the capacity of escaping predators could help the parasite transmission rate. Therefore, less active fish could be easier to catch by piscivirous birds from the surface, thus completing the parasite life cycle.


```{r}
#| label: control fish
#| output: false
#| warning: false

### essayer de faire un modÃ¨le bayesien avec les poissons controles ? ou trouver un modÃ¨le pour comparer les moyennes
#sÃ©parer trial 1-2 versus 3-4

data_control <- read.table("./data_raw/12_fish.csv",header=T, sep=";") # all fish
data_before <- read.table("./data_raw/12_fish_before.csv",header=T, sep=";") #trial 1-2
data_after <- read.table("./data_raw/12_fish_after.csv",header=T, sep=";") #trial 3-4
data_infected <- read.table("./data_raw/data_infectedd.csv",header=T, sep=";") #trial 3-4
data_uninfected <- read.table("./data_raw/data_uninfected.csv",header=T, sep=";") #trial 1-2

#exploration
qqnorm(data_control$exploration)
qqline(data_control$exploration)

shapiro.test(data_control$exploration)#not normal but visually normal

#boldness
qqnorm(log(data_control$boldness))
qqline(log(data_control$boldness))

shapiro.test(log(data_control$boldness))#normal

#activity
qqnorm(log(data_control$activity))
qqline(log(data_control$activity))

shapiro.test(log(data_control$activity))#normal

#graph inspection
plot(as.factor(data_control$trial), data_control$exploration)

plot(as.factor(data_control$trial), data_control$boldness)

plot(as.factor(data_control$trial), data_control$activity)

#Repeatability test
bold_log<-log(data_control$boldness)
trial_num<- as.numeric(data_control$trial)
ID<-as.factor(data_control$ID_fish)
data_control1<-as.data.frame(data_control)
cage_num<-as.factor(data_control$cage)

#VERIFICATION
#looking to see if I get the same R as my bayesien model
#between trial 3-4
k1<-rpt(exploration ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_infected, datatype = "Gaussian", 
    nboot = 1000, npermut = 0) #0.36, a bit higher then my model

rpt(log(activity) ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_infected, datatype = "Gaussian", 
    nboot = 1000, npermut = 0) #similar to bayesien model, 0.357

rpt(log(boldness) ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_infected, datatype = "Gaussian", 
    nboot = 1000, npermut = 0) #similar to bayesien model, 0.12

#between trial 1-2, all fish including control
k<-rpt(exploration ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_uninfected, datatype = "Gaussian", 
    nboot = 1000, npermut = 0) #0.26, similar to my model

kk<-rpt(log(activity) ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_uninfected, datatype = "Gaussian", 
    nboot = 1000, npermut = 0) #higher, 0.51

rpt(log(boldness) ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_uninfected, datatype = "Gaussian", 
    nboot = 1000, npermut = 0) #similar to bayesien model, 0.16


#Only on ID
rpt(exploration ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_control, datatype = "Gaussian",
          nboot = 0, npermut = 0)

#before
rpt(exploration ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_before, datatype = "Gaussian",
          nboot = 0, npermut = 0)

#after
rpt(exploration ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_after, datatype = "Gaussian",
          nboot = 0, npermut = 0)

#Full model for exploration
#overall repeatability for exploration
rep1<-rpt(exploration ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_control, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep1)
plot(rep1, cex.main = 1)

#repeatability for trial 1-2
rep1.1<-rpt(exploration ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_before, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep1.1)#0.264 
plot(rep1.1, cex.main = 1)

#repeatability for trial 3-4
rep1.2<-rpt(exploration ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_after, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep1.2)#0.417
plot(rep1.2, cex.main = 1)

#Only on ID
rpt(log(activity) ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_control, datatype = "Gaussian",
          nboot = 0, npermut = 0)

#before
rpt(log(activity) ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_before, datatype = "Gaussian",
          nboot = 0, npermut = 0)

#after
rpt(log(activity) ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_after, datatype = "Gaussian",
          nboot = 0, npermut = 0)

#full model for activity
#overall repeatability for activity
rep2<-rpt(log(activity) ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_control, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep2) # 0.16
plot(rep2, cex.main = 1)

#repeatability before
rep2.1<-rpt(log(activity) ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_before, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep2.1) #0.528 
plot(rep2.1, cex.main = 1)

#repeatability after
rep2.2<-rpt(log(activity) ~ ( 1 | ID_fish) + trial + ( 1 | cage), grname = "ID_fish", data = data_after, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep2.2) #0.314
plot(rep2.2, cex.main = 1)

#Only on ID
rpt(log(boldness) ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_control, datatype = "Gaussian",
          nboot = 0, npermut = 0)
#before
rpt(log(boldness) ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_before, datatype = "Gaussian",
          nboot = 0, npermut = 0)
#after
rpt(log(boldness) ~ (1|ID_fish) + trial, grname = "ID_fish", data = data_after, datatype = "Gaussian",
          nboot = 0, npermut = 0)

#full model for boldness
#overall repeatability for boldness
rep3<-rpt(log(boldness) ~ ( 1 | ID_fish) + ( 1 | cage), grname = "ID_fish", data = data_control, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep3)
plot(rep3, cex.main = 1)

#repeatability before 
rep3.1<-rpt(log(boldness) ~ ( 1 | ID_fish) + ( 1 | cage), grname = "ID_fish", data = data_before, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep3.1) #0.123
plot(rep3.1, cex.main = 1)

#repeatability after
rep3.2<-rpt(log(boldness) ~ ( 1 | ID_fish) + ( 1 | cage), grname = "ID_fish", data = data_after, datatype = "Gaussian", 
    nboot = 1000, npermut = 0)
summary(rep3.2) # 0.0464
plot(rep3.2, cex.main = 1)


```

## Supplement

```{r}
#| label: fig-fig6
#| fig-cap: Repeatability estimates and their 95% confidence intervals for the three traits (shyness, exploration and activity) of pumpkinseed sunfish (Lepomis gibbosus) measured overall and within each group (overall and uninfected, n = 72; infected, n = 60; control, n = 12). Uninfected are all individuals before the experimental infection (trial 1-2); infected are individuals after they were experimentally infected (trial 3-4); control fish are 2 groups that stayed in the lab during the experimental infection (trial 3-4); overall includes all fish and looks at repeatability regardless of the treatment (trial 1-2-3-4). 
#| out-width: 100%

#Plot 
#created dataset for all repeatability measures
  #Create data frame
dat_rep<-data.frame(
  "R"=c("Emergence time","Surface covered","Distance swam","Emergence time","Surface covered","Distance swam","Emergence time","Surface covered","Distance swam","Emergence time","Surface covered","Distance swam"),
  "Treatment" = c("Overall", "Overall","Overall","Uninfected","Uninfected","Uninfected","Infected","Infected","Infected","Control","Control","Control"),
  "Repeatability"=c(R_bold_mean,R_exp_mean,R_act_mean
                    ,R_C_bold,R_exp_C_mean,R_act_C,R_E_bold,R_exp_E_mean,R_act_E,R_T_bold,R_T_exp,R_T_act), 
  "Lower_CI" = c(R_Blb_bold,R_Blb_exp,R_Blb_act,R_Blb_bold_C,R_Blb_exp_C,R_Blb_act_C,R_Blb_bold_E,R_Blb_exp_E,R_Blb_act_E,R_Blb_bold_T,R_Blb_exp_T,R_Blb_act_T),
  "Higher_CI" = c(R_Bub_bold,R_Bub_exp,R_Bub_act,R_Bub_bold_C,R_Bub_exp_C,R_Bub_act_C,R_Bub_bold_E,R_Bub_exp_E,R_Bub_act_E,R_Bub_bold_T,R_Bub_exp_T,R_Bub_act_T))
  
  
 # "Uninfected" = c(b_act_C_mean,b_exp_C_mean,act_exp_C_mean),
  #"Lower_CI_u" = c(low_b_act_C,low_b_exp_C,low_act_exp_C),
  #"Higher_CI_u" = c(high_b_act_C,high_b_exp_C,high_act_exp_C),
  #"Infected" = c(b_act_E_mean,b_exp_E_mean,act_exp_E_mean),
  #"Lower_CI_i" = c(low_b_act_E,low_b_exp_E,low_act_exp_E),
  #"Higher_CI_i" = c(high_b_act_E,high_b_exp_E,high_act_exp_E))

dat_rep$Treatment = factor(dat_rep$Treatment, levels=c('Overall','Uninfected','Infected','Control'))

w1<-
ggplot(dat_rep)+ 
geom_point(data=dat_rep, mapping=aes(x= Repeatability, y= R), size=3)+
geom_errorbarh(aes(y = R, xmin= Lower_CI, xmax=Higher_CI), height = 0.2, linewidth =0.9, inherit.aes = FALSE)+scale_x_continuous()+facet_grid(Treatment ~ .)+geom_vline(xintercept=0.1, color = "red2", linetype = 2)+geom_hline(yintercept= "Shyness_Exploration", color = "red2", linetype = 2)+ xlab("Repeatability (R)") + ylab("")+ theme_classic()+ theme(strip.text.y = element_text(size=12, face="bold", angle = 360),strip.background = element_rect(colour="white", fill="white"))

ggsave("./output/figures/fig6.png", plot = w1, width = 17, height = 12, units = "cm")

fig6 <- image_read("./output/figures/fig6.png")  
fig6

```

```{r}
#| label: fig-fig7
#| fig-cap: Correlation coefficients and their 95% confidence intervals for the three traits (shyness, exploration and activity) of pumpkinseed sunfish (Lepomis gibbosus) measured overall and within each group (overall and uninfected, n = 72; infected, n = 60). Uninfected are all individuals before the experimental infection (trial 1-2); infected are individuals after they were experimentally infected (trial 3-4); overall looks at repeatability regardless of the infection status (trial 1-2-3-4).
#| out-width: 100%

#created dataset for all correlations
  #Create data frame
dat_cor<-data.frame(
  "BS"=c("Emergence time-Distance swam","Emergence time-Surface covered","Distance swam-Surface covered","Emergence time-Distance swam","Emergence time-Surface covered","Distance swam-Surface covered","Emergence time-Distance swam","Emergence time-Surface covered","Distance swam-Surface covered"),
  "Treatment" = c("Overall", "Overall","Overall","Uninfected","Uninfected","Uninfected","Infected","Infected","Infected"),
  "Correlation"=c(b_act_o,b_exp_o,act_exp_o,b_act_C_mean,b_exp_C_mean,act_exp_C_mean,b_act_E_mean,b_exp_E_mean,act_exp_E_mean), 
  "Lower_CI_o" = c(low_b_act_o,low_b_exp_o,low_act_exp_o,low_b_act_C,low_b_exp_C,low_act_exp_C,low_b_act_E,low_b_exp_E,low_act_exp_E),
  "Higher_CI_o" = c(high_b_act_o,high_b_exp_o,high_act_exp_o,high_b_act_C,high_b_exp_C,high_act_exp_C,high_b_act_E,high_b_exp_E,high_act_exp_E))
  
  
 # "Uninfected" = c(b_act_C_mean,b_exp_C_mean,act_exp_C_mean),
  #"Lower_CI_u" = c(low_b_act_C,low_b_exp_C,low_act_exp_C),
  #"Higher_CI_u" = c(high_b_act_C,high_b_exp_C,high_act_exp_C),
  #"Infected" = c(b_act_E_mean,b_exp_E_mean,act_exp_E_mean),
  #"Lower_CI_i" = c(low_b_act_E,low_b_exp_E,low_act_exp_E),
  #"Higher_CI_i" = c(high_b_act_E,high_b_exp_E,high_act_exp_E))

dat_cor$Treatment = factor(dat_cor$Treatment, levels=c('Overall','Uninfected','Infected'))

m1<-
ggplot(dat_cor)+ 
geom_point(data=dat_cor, mapping=aes(x= Correlation, y= BS), size=3)+
geom_errorbarh(aes(y = BS, xmin= Lower_CI_o, xmax=Higher_CI_o), height = 0.2, linewidth =0.9, inherit.aes = FALSE)+scale_x_continuous()+facet_grid(Treatment ~ .)+geom_vline(xintercept=0, color = "red2", linetype = 2)+geom_hline(yintercept= "Shyness_Exploration", color = "red2", linetype = 2)+ xlab("Correlation") + ylab("")+ theme_classic()+ theme(strip.text.y = element_text(size=12, face="bold", angle = 360),strip.background = element_rect(colour="white", fill="white"))

m1
ggsave("./output/figures/fig7.png", plot = m1, width = 17, height = 12, units = "cm")

fig7 <- image_read("./output/figures/fig7.png")  
fig7

```

```{r}
#| label: fig-fig8
#| fig-cap: Correlations and their 95% confidence intervals between distance swam-emergence time (A), surface covered-emergence time (B) and surface covered-distance swamexploration-activity (C) of pumpkinseed sunfish (Lepomis gibbosus) for the uninfected (n = 72) and infected group (n = 60). Each line of color link the same individual (dot) for two trials (trial 1-2 for uninfected; trial 3-4 for infected).rb(cor) is the correlation at the population level (inter-individuals), rw(cor) is the correlation at the individual level (intra-individual). 
#| out-width: 100%
#| fig-width: 7
#| fig-height: 8

#Boldness and activity average between trials
dat_E <- read.table("./output/dat_models_E.csv",header=T, sep=",")
dat_C <- read.table("./output/dat_models_C.csv",header=T, sep=",")

#Boldness activity 
p1<-
   ggplot(data=dat_C)+
  geom_point(mapping = aes(x = z_log_boldness, y = z_log_activity, color = factor(ID_fish)))+ scale_color_viridis_d(option = "viridis") +
  geom_line(mapping = aes(x = z_log_boldness, y = z_log_activity, color = factor(ID_fish))) +
   theme_classic() +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("$Shyness_{log_{2}}$"), y = TeX("$Activity_{log_{2}}$"), title = "Uninfected") +
  annotate("text", x = -1.3, y = 2.8, label = TeX(paste0("$r_{b}$ = "," -0.52 ", " 95%CI: -0.87, -0.03")), size =3, color = "black") + 
  annotate("text", x = -1.3, y = 2.4, label = TeX(paste0("$r_{w}$ = ", " 0.18 ", " 95%CI: -0.06, 0.40")), size=3, color = "black")

p2<-
  ggplot(data=dat_E)+
  geom_point(mapping = aes(x = z_log_boldness, y = z_log_activity, color = factor(ID_fish)))+ scale_color_viridis_d(option = "viridis") +
  geom_line(mapping = aes(x = z_log_boldness, y = z_log_activity, color = factor(ID_fish))) + 
   theme_classic() +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("$Shyness_{log_{2}}$"), y = TeX("$Activity_{log_{2}}$"), title = "Infected") +
  annotate("text", x = -1.5, y = 2.8, label = TeX(paste0("$r_{b}$ = ", " -0.43 ", " 95%CI: -0.84, 0.13 ")), size =3, color = "black") + 
  annotate("text", x = -1.5, y = 2.4, label = TeX(paste0("$r_{w}$ = ", " 0.17 ", " 95%CI: -0.07, 0.39")), size=3, color = "black")
 
 p_1<- plot_grid(
  p1, p2, ncol = 2)

    #Boldness and exploration average between trials
            
  p3<-
 ggplot(data=dat_C)+
  geom_point(mapping = aes(x = z_log_boldness, y = z_exploration, color = factor(ID_fish)))+ scale_color_viridis_d(option = "viridis") +
  geom_line(mapping = aes(x = z_log_boldness, y = z_exploration, color = factor(ID_fish))) + 
   theme_classic() +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("$Shyness_{log_{2}}$"), y = TeX("Exploration"), title = "Uninfected") +
  annotate("text", x = -1.3, y = 2.8, label = TeX(paste0("$r_{b}$ = ", " -0.41 ", " 95%CI: -0.83, 0.11 ")), size =3, color = "black") + 
  annotate("text", x = -1.3, y = 2.4, label = TeX(paste0("$r_{w}$ = ", " -0.06 ", " 95%CI: -0.27, 0.17")), size=3, color = "black")
  

  p4<-
    ggplot(data=dat_E)+
  geom_point(mapping = aes(x = z_log_boldness, y = z_exploration, color = factor(ID_fish)))+ scale_color_viridis_d(option = "viridis") +
  geom_line(mapping = aes(x = z_log_boldness, y = z_exploration, color = factor(ID_fish))) + 
   theme_classic() +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("$Shyness_{log_{2}}$"), y = TeX("Exploration"), title = "Infected") +
  annotate("text", x = 1, y = 2.8, label = TeX(paste0("$r_{b}$ = ", " -0.42 ", " 95%CI: -0.85, 0.25 ")), size =3, color = "black") + 
  annotate("text", x = 1, y = 2.4, label = TeX(paste0("$r_{w}$ = ", " -0.12 ", " 95%CI: -0.33, 0.09")), size=3, color = "black")
    
  
   p_2<- plot_grid(
  p3, p4, ncol = 2)

    
  #Activity and exploration average between trials

    p5<-
 ggplot(data=dat_C)+
  geom_point(mapping = aes(x = z_log_activity, y = z_exploration, color = factor(ID_fish))) +
  geom_line(mapping = aes(x = z_log_activity, y = z_exploration, color = factor(ID_fish))) + 
  scale_color_viridis_d(option = "viridis")+
   theme_classic() +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("$Activity_{log_{2}}$"), y = TeX("Exploration"), title = "Uninfected") +
  annotate("text", x = -1.3, y = 2.8, label = TeX(paste0("$r_{b}$ = ", " 0.70 ", " 95%CI: 0.37, 0.93")), size =3, color = "black") + 
  annotate("text", x = -1.3, y = 2.4, label = TeX(paste0("$r_{w}$ = ", " 0.19 ", " 95%CI: -0.04, 0.40")), size=3, color = "black")
  
  p6<-
    ggplot(data=dat_E)+
  geom_point(mapping = aes(x = z_log_activity, y = z_exploration, color = factor(ID_fish)))+ scale_color_viridis_d(option = "viridis") +
  geom_line(mapping = aes(x = z_log_activity, y = z_exploration, color = factor(ID_fish))) + 
   theme_classic() +
    theme(strip.background = element_rect(fill = "white", colour = "white")) +
    theme(legend.position="none") + labs(x = TeX("$Activity_{log_{2}}$"), y = TeX(""), title = "Infected") +
  annotate("text", x = -1, y = 2.8, label = TeX(paste0("$r_{b}$ = ", " 0.14 ", " 95%CI: -0.43, 0.66 ")), size =3, color = "black") + 
  annotate("text", x = -1, y = 2.4, label = TeX(paste0("$r_{w}$ = ", " -0.14 ", " 95%CI: -0.35, 0.08")), size=3, color = "black")
    

  p_3<-plot_grid(
  p5, p6, ncol = 2)

pp<-plot_grid(
  p_1, p_2, p_3,
  labels = "AUTO", ncol = 1)
pp
ggsave("./output/figures/fig8.png", plot = pp, width = 28, height = 30, units = "cm")

fig8 <- image_read("./output/figures/fig8.png")  
fig8


```

```{r}
#| label: fig-fig9
#| fig-cap: Change in black spots density and body condition of pumpkinseed sunfish in relation with the slope of change in activity. Red line is the mean for change in black spot density. Blue shades in the legend show low body condition (dark blue) to high body condition change (light blue) after the experimental infection. All variables are z-scaled. Change in black spot density is the difference between pre-infection black spot number vs post-infection. Change in body condition is the difference before and after the experimental infection. 
#| out-width: 100%
#| fig-width: 7
#| fig-height: 4

new_data <- read.table("./output/new_data1.csv",header=T, sep=",")
#plot model 10
#k1<-plot(new_data$bold_E,new_data$z_change_bs)
#k2<-plot(new_data$exp_E,new_data$z_change_bs)
#k3<-plot(new_data$z_change_bs, new_data$act_E)
#k4<-plot(new_data$z_change_bc, new_data$act_E)
#k5<-plot(new_data$bold_E,new_data$z_change_bc)
#k6<-plot(new_data$exp_E,new_data$z_change_bc)

#plotting the change in bs with the change of activity, group with body condition change
k1<-ggplot(data= new_data)+
  geom_point(aes(x= z_change_bs,y=act_E, color = z_change_bc), size=3)+
  xlab("Change in black spot density") + ylab("Slope of change in activity") + theme_classic()+geom_vline(xintercept=0, color = "red2", linetype = 2)+
  labs(color = "Change in \n body condition") + scale_colour_gradient(low = "#112D72",high = "#C7D1ED")

ggsave("./output/figures/fig9.png", plot = k1, width = 15, height = 10, units = "cm")

fig9 <- image_read("./output/figures/fig9.png")  
fig9

```

```{r}
#| label: tbl-tab1
#| tbl-cap: Repeatability (R) estimates with 95% confidence intervals (CI) for the three behaviours (shyness, exploration and activity) between the uninfected (N=72) and experimentally infected group (N=60). 

tab1 <- data.frame(Trait = c("Shyness (log)", "Exploration","Activity (log)"), 
                "Uninfected" = c(mean(R_C_boldness[,1]), mean(R_C_exploration[,1]), mean(R_C_activity[,1])), 
                  "2.5% CI (U)" = c((R_Blb_bold_C),(R_Blb_exp_C), (R_Blb_act_C)),
              "97.5% CI (U)" = c((R_Bub_bold_C), (R_Bub_exp_C),(R_Bub_act_C)),
                "Infected" = c(mean(R_E_boldness[,1]), mean(R_E_exploration[,1]), mean(R_E_activity[,1])),
              "2.5% CI (I)" = c((R_Blb_bold_E), (R_Blb_exp_E), (R_Blb_act_E)), "97.5% CI (I)" = c((R_Bub_bold_E), (R_Bub_exp_E), (R_Bub_act_E)), check.names = FALSE)

   gt(tab1)  %>% 
    tab_style(style = list(cell_text(weight = "bold")),
          locations = list(cells_column_labels())) %>% 
    opt_table_lines(extent = "none")  %>% 
    tab_style(style = cell_borders(sides = c("top", "bottom")),
          locations = list(cells_column_labels()))  %>% 
    tab_style(style = cell_borders(sides = "bottom", weight = px(2)),
         locations =  cells_body(rows = 3))

```

```{r}
#| label: tbl-tab2
#| tbl-cap: Raw mean and standard deviation for all variables used in the models

all_data <- read.table("./output/all_data_p.csv",header=T, sep=",")#exploration is z transform here
all_data2 <- read.table("./data_raw/all_data.csv",header=T, sep=";")#using this dataset for exploration

#boldness uninfected
dat_boldc <- all_data %>% filter(treatment == "C")
raw_boldc_mean<-mean(dat_boldc$boldness)
raw_boldc_sd<-sd(dat_boldc$boldness)

#boldness infected
dat_bolde <- all_data %>% filter(treatment == "E")
raw_bolde_mean<-mean(dat_bolde$boldness)
raw_bolde_sd<-sd(dat_bolde$boldness)

#exploration uninfected
dat_expc <- all_data2 %>% filter(treatment == "C")
raw_expc_mean<-mean(dat_expc$exploration)
raw_expc_sd<-sd(dat_expc$exploration)

#exploration infected
dat_expe <- all_data2 %>% filter(treatment == "E")
raw_expe_mean<-mean(dat_expe$exploration)
raw_expe_sd<-sd(dat_expe$exploration)

#activity uninfected
dat_actc <- all_data %>% filter(treatment == "C")
raw_actc_mean<-mean(dat_actc$activity)
raw_actc_sd<-sd(dat_actc$activity)

#activity infected
dat_acte <- all_data %>% filter(treatment == "E")
raw_acte_mean<-mean(dat_acte$activity)
raw_acte_sd<-sd(dat_acte$activity)

#parasite density
raw_pl_mean<-mean(all_data$dens_tot)
raw_pl_sd<-sd(all_data$dens_tot)

#BS density post
raw_bs_mean<-mean(all_data$dens_bs2)
raw_bs_sd<-sd(all_data$dens_bs2)

#cestode density
raw_ces_mean<-mean(all_data$dens_ces)
raw_ces_sd<-sd(all_data$dens_ces)

#body condition uninfected
dat_bc <- read.table("./output/dat_bc.csv",header=T, sep=",") #dataset with body condition classified with trials and treatment

dat_bc_c <- dat_bc %>% filter(treatment == "C")
raw_bc_c_mean<-mean(dat_bc_c$body_condition)
raw_bc_c_sd<-sd(dat_bc_c$body_condition)

#body condition infected
dat_bc_e <- dat_bc %>% filter(treatment == "E")
raw_bc_e_mean<-mean(dat_bc_e$body_condition)
raw_bc_e_sd<-sd(dat_bc_e$body_condition)

#table with raw mean and sd for the variables
 
tab2 <- data.frame("Raw variables" = c("Shyness (sec)", "Exploration (%)","Activity (cm)","Body condition (mass/length^3)", "Parasite density (no/g)", "Black spot density (no/g)","Cestode density (no/g)"), 
                  "Mean uninfected" = c(raw_boldc_mean,raw_expc_mean,raw_actc_mean,raw_bc_c_mean,NA,NA,NA), "Standard deviation uninfected" = c(raw_boldc_sd,raw_expc_sd,raw_actc_sd,raw_bc_c_sd,NA,NA,NA),
                  "Mean infected" = c(raw_bolde_mean,raw_expe_mean,raw_acte_mean,raw_bc_e_mean,raw_pl_mean,raw_bs_mean,raw_ces_mean), "Standard deviation infected" = c(raw_bolde_sd,raw_expe_sd,raw_acte_sd,raw_bc_e_sd,raw_pl_sd,raw_bs_sd,raw_ces_sd),
                  check.names = FALSE)

   gt(tab2)  %>% 
    tab_style(style = list(cell_text(weight = "bold")),
          locations = list(cells_column_labels())) %>% 
    opt_table_lines(extent = "none")  %>% 
    tab_style(style = cell_borders(sides = c("top", "bottom")),
          locations = list(cells_column_labels()))  %>% 
    tab_style(style = cell_borders(sides = "bottom", weight = px(2)),
         locations =  cells_body(rows = 7))  %>%
  fmt_number(columns = 2, decimals = 3) %>%
  fmt_number(columns = 3, decimals = 3) %>%  
  fmt_number(columns = 4, decimals = 3) %>%
  fmt_number(columns = 5, decimals = 3)

```


## References
